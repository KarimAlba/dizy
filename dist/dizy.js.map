{"version":3,"file":"dizy.js","mappings":"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","sources":["webpack://dizy/webpack/universalModuleDefinition","webpack://dizy/./ReflectionJs/index.js","webpack://dizy/./ReflectionJs/src/getArgumentDefaultValue.js","webpack://dizy/./ReflectionJs/src/getBaseClassConstructor.js","webpack://dizy/./ReflectionJs/src/getClassConstructorArgsNames.js","webpack://dizy/./ReflectionJs/src/getFunctionArgsNames.js","webpack://dizy/./ReflectionJs/src/getStringifiedEntityName.js","webpack://dizy/./ReflectionJs/src/parseType.js","webpack://dizy/webpack/bootstrap","webpack://dizy/webpack/runtime/make namespace object","webpack://dizy/./src/lifecycle/Lifecycle.js","webpack://dizy/./src/DIClazz.js","webpack://dizy/./src/constants/LifecycleEnum.js","webpack://dizy/./src/lifecycle/DemandedLifecycle.js","webpack://dizy/./src/lifecycle/SessionLifecycle.js","webpack://dizy/./src/lifecycle/SingletoneLifecycle.js","webpack://dizy/./src/DIObjectConfig.js","webpack://dizy/./src/containers/helpers/DIObjectKey.js","webpack://dizy/./src/errors/DependencyLoopError.js","webpack://dizy/./src/errors/InvalidDIObjectArgDefaultValue.js","webpack://dizy/./src/errors/InvalidDIObjectArgumentName.js","webpack://dizy/./src/errors/NotAllowDIObjectType.js","webpack://dizy/./src/containers/helpers/DependencyTreeNode.js","webpack://dizy/./src/containers/helpers/DependencyTree.js","webpack://dizy/./src/containers/DIContainer.js","webpack://dizy/./src/containers/helpers/DIObjectKeyFactory.js","webpack://dizy/./src/containers/helpers/DependencyTreeFactory.js","webpack://dizy/./src/containers/AbstractContextContainer.js","webpack://dizy/./src/errors/ContainerHasClassWithInvalidLifecycle.js","webpack://dizy/./src/wrappers/FunctionWrapper.js","webpack://dizy/./src/containers/helpers/InstanceHelper.js","webpack://dizy/./src/containers/SimpleContainer.js","webpack://dizy/./src/utils/deepEqual.js","webpack://dizy/./src/containers/helpers/InstancesMap.js","webpack://dizy/./src/containers/SessionContainer.js","webpack://dizy/./src/containers/SingletoneContainer.js","webpack://dizy/./src/containers/DemandedFactory.js","webpack://dizy/./src/utils/generateRandomString.js","webpack://dizy/./src/containers/ContextContainer.js","webpack://dizy/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dizy\"] = factory();\n\telse\n\t\troot[\"dizy\"] = factory();\n})(self, () => {\nreturn ","const argDefaultValue = require(\"./src/getArgumentDefaultValue.js\");\nconst getBaseClassConstructor = require(\"./src/getBaseClassConstructor.js\");\nconst classConstructorArgsNames = require(\"./src/getClassConstructorArgsNames.js\");\nconst functionArgsNames = require(\"./src/getFunctionArgsNames.js\");\nconst getType = require(\"./src/parseType.js\");\n\nmodule.exports.getArgumentDefaultValue = argDefaultValue;\nmodule.exports.getClassConstructorArgsNames = classConstructorArgsNames;\nmodule.exports.getFunctionArgsNames = functionArgsNames;\nmodule.exports.parseType = getType;\nmodule.exports.getBaseClass = getBaseClassConstructor;\n","const getStringifiedEntityName = require(\"./getStringifiedEntityName.js\");\nconst parseType = require(\"./parseType.js\");\n\nclass ArgumentInvalidType extends Error {\n  constructor(argType) {\n    const message = `Argument 'arg' of getArgumentDefaultValue(arg) has invalid type - ${argType}. Argument type must be a string.`;\n    super(message);\n  }\n}\n\nclass ArgumentIsEmptyString extends Error {\n  constructor() {\n    super(`Argument 'arg' is an empty string.`);\n  }\n}\n\n// What if argument default value is primitive or a stringified object (not JSON object, but object like a simple string) ???\nfunction getArgumentDefaultValue(argStr) {\n  const argType = parseType(argStr);\n  if (argType !== \"string\") throw new ArgumentInvalidType(argType);\n  if (argStr === \"\") throw new ArgumentIsEmptyString();\n  const parts = argStr.split(\"=\");\n  return {\n    name: parts[0].trim(),\n    value:\n      parts.length > 1 ? getStringifiedEntityName(parts[1].trim()) : undefined,\n  };\n}\n\nmodule.exports = getArgumentDefaultValue;\n","const parseType = require(\"./parseType.js\");\n\nclass ClassInvalidType extends Error {\n  constructor(argType) {\n    const message = `Argument 'cls' of getBaseClass(cls) has invalid type - ${argType}. Argument type must be a class or a function.`;\n    super(message);\n  }\n}\n\nconst getBaseClassConstructor = (cls) => {\n  const clsType = parseType(cls);\n  if (clsType !== \"class\" && clsType !== \"function\")\n    throw new ClassInvalidType(clsType);\n  const constructor =\n    clsType === \"class\" ? cls.prototype.__proto__.constructor : cls.prototype;\n  return constructor;\n};\n\nmodule.exports = getBaseClassConstructor;\n","const {\n  findCloseBraceIndex,\n  splitArgsStrByCommas,\n} = require(\"./getFunctionArgsNames.js\");\nconst parseType = require(\"./parseType.js\");\n\nclass HasNoConstructorError extends Error {\n  constructor() {\n    const message = \"DI object has no one constructor. Need one or more.\";\n    super(message);\n  }\n}\n\nclass ClsArgumentInvalidType extends Error {\n  constructor(clsType) {\n    const message = `Argument cls with invalid type - ${clsType}. Argument value type must be a class.`;\n    super(message);\n  }\n}\n\nconst getClassConstructorArgsNames = (cls) => {\n  const clsType = parseType(cls);\n  if (clsType !== \"class\") throw new ClsArgumentInvalidType(clsType);\n  const clsStr = cls.toString();\n  const separator = \"constructor\";\n  const startIndex = clsStr.indexOf(separator, 0);\n  if (startIndex === -1) {\n    throw new HasNoConstructorError();\n  }\n  const openBraceStartIndex = clsStr.indexOf(\"(\", startIndex);\n  let closeBraceStartIndex = findCloseBraceIndex(clsStr, openBraceStartIndex);\n  const argsStr = clsStr.slice(openBraceStartIndex + 1, closeBraceStartIndex);\n  const argsSplittedArray = splitArgsStrByCommas(argsStr);\n  const args = argsSplittedArray\n    .map((arg) => arg.trim())\n    .filter((arg) => arg !== \"\");\n  return {\n    startPosition: startIndex,\n    args,\n  };\n};\n\nmodule.exports = getClassConstructorArgsNames;\n","const parseType = require(\"./parseType.js\");\n\nclass FuncArgumentInvalidType extends Error {\n  constructor(funcType) {\n    const message = `Argument func with invalid type - ${funcType}. Argument value type must be a function.`;\n    super(message);\n  }\n}\n\nconst findCloseBraceIndex = (str, startIndex) => {\n  const openBraceIndex = str.indexOf(\"(\", startIndex);\n  let closeBraceIndex = str.indexOf(\")\", openBraceIndex);\n  const getOpenBracesCount = (end) =>\n    str\n      .split(\"\")\n      .slice(openBraceIndex, end)\n      .map((s, index) => ({ char: s, index }))\n      .filter((s) => s.char === \"(\").length;\n  let openBraceBeforeCloseCount = getOpenBracesCount(closeBraceIndex);\n  let i = 0;\n  while (openBraceBeforeCloseCount > 1) {\n    i++;\n    closeBraceIndex = str.indexOf(\")\", closeBraceIndex + 1);\n    openBraceBeforeCloseCount = getOpenBracesCount(closeBraceIndex) - i;\n  }\n  return closeBraceIndex;\n};\n\nconst findArgsSeparatorCommas = (str) => {\n  const allCommas = str\n    .split(\"\")\n    .map((char, index) => ({ char, index }))\n    .filter((s) => s.char === \",\");\n  let prevCommaIndex = 0;\n  const argsSeparatorCommas = allCommas.filter((comma) => {\n    const openBracesCount = str\n      .slice(prevCommaIndex, comma.index)\n      .split(\"\")\n      .filter((s) => s === \"(\").length;\n    const closeBracesCount = str\n      .slice(prevCommaIndex, comma.index)\n      .split(\"\")\n      .filter((s) => s === \")\").length;\n    const openCurlyBracesCount = str\n      .slice(prevCommaIndex, comma.index)\n      .split(\"\")\n      .filter((s) => s === \"{\").length;\n    const closeCurlyBracesCount = str\n      .slice(prevCommaIndex, comma.index)\n      .split(\"\")\n      .filter((s) => s === \"}\").length;\n    if (\n      openBracesCount === closeBracesCount &&\n      openCurlyBracesCount === closeCurlyBracesCount\n    ) {\n      prevCommaIndex = comma.index;\n      return true;\n    }\n    return false;\n  });\n  return argsSeparatorCommas.map((c) => c.index);\n};\n\nconst splitArgsStrByCommas = (argsStr) => {\n  // -1 is first, because next step will be slice with startIndex = separator[i] + 1\n  const separators = [-1, ...findArgsSeparatorCommas(argsStr), null];\n  return separators\n    .slice(1)\n    .map((commaIndex, i) =>\n      commaIndex === null\n        ? argsStr.slice(separators[i] + 1)\n        : argsStr.slice(separators[i] + 1, commaIndex),\n    );\n};\n\nconst getFunctionArgsNames = (func) => {\n  const funcType = parseType(func);\n  if (funcType !== \"function\" && funcType !== \"function class\")\n    throw new FuncArgumentInvalidType(funcType);\n  const funcStr = func.toString();\n  const openBraceIndex = funcStr.indexOf(\"(\", 0);\n  const closeBraceIndex = findCloseBraceIndex(funcStr, openBraceIndex);\n  const equalIndex = funcStr.indexOf(\"=\");\n  // functions with one argument without braces around:\n  // argName => {};\n  // argName => doSth(argName);\n  const oneArgWithoutBraces =\n    equalIndex !== -1 && (openBraceIndex === -1 || equalIndex < openBraceIndex);\n  let argsStr;\n  if (oneArgWithoutBraces) {\n    argsStr = funcStr.slice(0, equalIndex);\n  } else {\n    if (openBraceIndex + 1 === closeBraceIndex)\n      argsStr = \"\"; // like function A() {}\n    else argsStr = funcStr.slice(openBraceIndex + 1, closeBraceIndex);\n  }\n  const argsSplittedArray = splitArgsStrByCommas(argsStr);\n  const args = argsSplittedArray\n    .map((arg) => arg.trim())\n    .filter((arg) => arg !== \"\");\n  return {\n    startPosition: openBraceIndex === -1 ? 0 : openBraceIndex,\n    args,\n  };\n};\n\nmodule.exports = getFunctionArgsNames;\nmodule.exports.findCloseBraceIndex = findCloseBraceIndex;\nmodule.exports.splitArgsStrByCommas = splitArgsStrByCommas;\n","const parseType = require(\"./parseType.js\");\n\nclass EntityStrInvalidType extends Error {\n  constructor(entityStr, entityStrType) {\n    super(\n      `getStringifiedEntityName argument type is invalid (${entityStr} - ${entityStrType}). 'entityStr' must be a string.`,\n    );\n  }\n}\n\nclass EntityStrIsEmpty extends Error {\n  constructor() {\n    super(`getStringifiedEntityName argument is an empty string.`);\n  }\n}\n\nconst getStringifiedEntityName = (entityStr) => {\n  const entityStrType = parseType(entityStr);\n  if (entityStrType !== \"string\")\n    throw new EntityStrInvalidType(entityStr, entityStrType);\n  if (entityStr === \"\") throw new EntityStrIsEmpty();\n  if (entityStr.includes(\"WEBPACK_IMPORTED_MODULE\")) {\n    const startIndex = entityStr.indexOf(\"_\") + 1;\n    const endIndex = entityStr.indexOf(\"_\", startIndex + 1);\n    return entityStr.slice(startIndex, endIndex);\n  }\n  return entityStr;\n};\n\nmodule.exports = getStringifiedEntityName;\n","function parseType(data) {\n  const type = typeof data;\n  if (type !== \"function\") {\n    if (type === \"object\" && data === null) return \"null\";\n    return type;\n  }\n  const typeStr = data.toString();\n  if (typeStr.startsWith(\"class\")) {\n    return \"class\";\n  } else if (typeStr.includes(\"_classCallCheck\")) {\n    return \"function class\";\n  } else {\n    return \"function\";\n  }\n}\n\nmodule.exports = parseType;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","class NotImplementedException extends Error {\n\tconstructor() {\n\t\tthis.message = \"Not implemented error\";\n\t\tsuper(this.message);\n\t}\n}\n\nclass Lifecycle {\n\tconstructor(id) {\n\t\tthis.id = id;\n\t}\n\n\tbeforeCreate() {\n\t\tthrow new NotImplementedException();\n\t}\n\n\tafterCreate() {\n\t\tthrow new NotImplementedException();\n\t}\n}\n\nexport default Lifecycle;\n","import { parseType } from \"../ReflectionJs/index.js\";\nimport Lifecycle from \"./lifecycle/Lifecycle.js\";\n\nclass DIClazz {\n\tconstructor(key, name, type, isClass, lifecycle, constructor) {\n\t\tif (parseType(key) === \"undefined\" || parseType(key) === \"null\" || parseType(key) === \"boolean\") {\n\t\t\tthrow new Error(\"DIClazz constructor argument 'key' is invalid. Argument 'key' must not be an undefined, null or boolean.\");\n\t\t}\n\t\tif (parseType(name) !== \"string\") {\n\t\t\tthrow new Error(\"DIClazz constructor argument 'name' is invalid. Argument 'name' type must be a string.\");\n\t\t}\n\t\tif (parseType(type) !== \"class\" && parseType(type) !== \"function\" && parseType(type) !== \"function class\") {\n\t\t\tthrow new Error(\"DIClazz constructor argument 'type' is invalid. Argument 'type' must be a class or a function.\");\n\t\t}\n\t\tif (parseType(isClass) !== \"boolean\") {\n\t\t\tthrow new Error(\"DIClazz constructor argument 'isClass' is invalid. Argument 'isClass' must be a boolean.\");\n\t\t}\n\t\tif (!(lifecycle instanceof Lifecycle)) {\n\t\t\tthrow new Error(\"DIClazz constructor argument 'lifecycle' is invalid. Argument 'lifecycle' must be an instance of Lifecycle.\");\n\t\t}\n\t\t// if (!Object.values(LifecycleEnum).find(v => v === lifecycle.id)) {\n\t\t//     throw new UnregisteredDIObjectLifecycle(lifecycle);\n\t\t// }\n\t\tthis.key = key;\n\t\tthis.name = name;\n\t\tthis.type = type;\n\t\tthis.isClass = isClass;\n\t\tthis.lifecycle = lifecycle;\n\t\tthis.constructor = constructor;\n\t}\n}\n\nexport default DIClazz;\n","const LifecycleEnum = {\n\tPersistent: 0,\n\tSession: 1,\n\tSingletone: 2,\n\tDemanded: 3,\n};\n\nexport default LifecycleEnum;\n","import LifecycleEnum from \"../constants/LifecycleEnum.js\";\nimport Lifecycle from \"./Lifecycle.js\";\n\nclass DemandedLifecycle extends Lifecycle {\n\tconstructor(beforeCreate = () => {}, afterCreate = () => {}) {\n\t\tsuper(LifecycleEnum.Demanded);\n\t\tthis.beforeCreate = beforeCreate;\n\t\tthis.afterCreate = afterCreate;\n\t}\n}\n\nexport default DemandedLifecycle;\n","import LifecycleEnum from \"../constants/LifecycleEnum.js\";\nimport Lifecycle from \"./Lifecycle.js\";\n\nclass SessionLifecycle extends Lifecycle {\n\tconstructor(beforeCreate = () => {}, afterCreate = () => {}) {\n\t\tsuper(LifecycleEnum.Session);\n\t\tthis.beforeCreate = beforeCreate;\n\t\tthis.afterCreate = afterCreate;\n\t}\n}\n\nexport default SessionLifecycle;\n","import LifecycleEnum from \"../constants/LifecycleEnum.js\";\nimport Lifecycle from \"./Lifecycle.js\";\n\nclass SingletoneLifecycle extends Lifecycle {\n\tconstructor(beforeCreate = () => {}, afterCreate = () => {}) {\n\t\tsuper(LifecycleEnum.Singletone);\n\t\tthis.beforeCreate = beforeCreate;\n\t\tthis.afterCreate = afterCreate;\n\t}\n}\n\nexport default SingletoneLifecycle;\n","import { parseType } from \"../ReflectionJs/index.js\";\nimport DemandedLifecycle from \"./lifecycle/DemandedLifecycle.js\";\nimport Lifecycle from \"./lifecycle/Lifecycle.js\";\nimport SessionLifecycle from \"./lifecycle/SessionLifecycle.js\";\nimport SingletoneLifecycle from \"./lifecycle/SingletoneLifecycle.js\";\n\nexport class InvalidDIObjectName extends Error {\n\tconstructor(name) {\n\t\tconst message = `DI object name { ${name} } is invalid. Name must be a not empty string`;\n\t\tsuper(message);\n\t\tthis.name = \"InvalidDIObjectName\";\n\t}\n}\n\nexport class InvalidDIObjectParent extends Error {\n\tconstructor() {\n\t\tconst message = \"DI object parent must be an instance of ContextContainer.\";\n\t\tsuper(message);\n\t\tthis.name = \"InvalidDIObjectParent\";\n\t}\n}\n\nexport class UnregisteredDIObjectLifecycle extends Error {\n\tconstructor(lifecycle) {\n\t\tconst message = `There is no registered lifecycle with id = ${lifecycle.id}.`;\n\t\tsuper(message);\n\t\tthis.name = \"UnregisteredDIObjectLifecycle\";\n\t}\n}\n\nexport class InvalidDIObjectLifecycle extends Error {\n\tconstructor(lifecycle) {\n\t\tconst message = `Invalid lifecycle { ${lifecycle} }. lifecycle prop must be an instance of Lifecycle or it's derived class.`;\n\t\tsuper(message);\n\t\tthis.name = \"InvalidDIObjectLifecycle\";\n\t}\n}\n\nexport class InvalidDIObjectType extends Error {\n\tconstructor(type) {\n\t\tconst message = `DI object type { ${type} } is invalid. type prop must be a class or a function`;\n\t\tsuper(message);\n\t\tthis.name = \"InvalidDIObjectType\";\n\t}\n}\n\nexport class DIObjectConfig {\n\tconstructor(name, type, lifecycle) {\n\t\tif (!(typeof name === \"string\" || typeof name === \"symbol\") || !name === true) {\n\t\t\tthrow new InvalidDIObjectName(name);\n\t\t}\n\t\tif (parseType(type) !== \"class\" && parseType(type) !== \"function\" && parseType(type) !== \"function class\") {\n\t\t\tthrow new InvalidDIObjectType(type);\n\t\t}\n\t\tif (!(lifecycle instanceof Lifecycle)) {\n\t\t\tthrow new InvalidDIObjectLifecycle(lifecycle);\n\t\t}\n\t\tthis.name = name;\n\t\tthis.type = type;\n\t\tthis.lifecycle = lifecycle;\n\t}\n}\n\nexport class DemandedConfig extends DIObjectConfig {\n\tconstructor(name = \"\", type = {}, beforeCreate = () => {}, afterCreate = () => {}) {\n\t\tsuper(name, type, new DemandedLifecycle(beforeCreate, afterCreate));\n\t}\n}\n\nexport class SingletoneConfig extends DIObjectConfig {\n\tconstructor(name = \"\", type = {}, beforeCreate = () => {}, afterCreate = () => {}) {\n\t\tsuper(name, type, new SingletoneLifecycle(beforeCreate, afterCreate));\n\t}\n}\n\nexport class SessionConfig extends DIObjectConfig {\n\tconstructor(name = \"\", type = {}, beforeCreate = () => {}, afterCreate = () => {}) {\n\t\tsuper(name, type, new SessionLifecycle(beforeCreate, afterCreate));\n\t}\n}\n","import { parseType } from \"../../../ReflectionJs/index.js\";\n\nclass InvalidKey extends Error {\n\tconstructor(key) {\n\t\tsuper(\n\t\t\t`DIObjectKey constructor argument ('key' = ${key ? key.toString() : key} (type - ${parseType(key)})) is invalid.\\n` +\n\t\t\t\t`Argument 'key' must be a string like '@{parentName}/{DIObjectName}/{lifecycleId}/{isClass}'`,\n\t\t);\n\t}\n}\n\nclass DIObjectKey {\n\tconstructor(key) {\n\t\tif (typeof key !== \"string\") {\n\t\t\tthrow new InvalidKey(key);\n\t\t}\n\t\tif (!/@[\\w\\s]+\\/[\\w\\s]+\\/[\\d]+\\/true/.test(key) && !/@[\\w\\s]+\\/[\\w\\s]+\\/[\\d]+\\/false/.test(key)) {\n\t\t\tthrow new InvalidKey(key);\n\t\t}\n\t\tthis.key = key;\n\t}\n\n\tparseKey() {\n\t\t// get data from key string\n\t\t// return Symbol.keyFor(this.key);\n\t\tconst keyFields = this.key.split(\"/\");\n\t\treturn {\n\t\t\tparent: {\n\t\t\t\tname: keyFields[0].length > 1 ? keyFields[0].slice(1) : \"\",\n\t\t\t},\n\t\t\tname: keyFields[1],\n\t\t\tlifecycle: Number(keyFields[2]),\n\t\t\tisClass: Boolean(keyFields[3]),\n\t\t};\n\t}\n}\n\nexport default DIObjectKey;\n","class DependencyLoopError extends Error {\n\tconstructor(first, second) {\n\t\tconst message = `${first} requires ${second}. And ${second} requires ${first}.`;\n\t\tsuper(message);\n\t\tthis.name = \"Dependency loop error.\";\n\t}\n}\n\nexport default DependencyLoopError;\n","class InvalidDIObjectArgDefaultValue extends Error {\n\tconstructor(type, argName, defaultValue) {\n\t\tconst message = `Invalid argument { ${argName} } default value in ${type}. There is no { ${defaultValue} } in DI Container.`;\n\t\tsuper(message);\n\t\tthis.name = \"Invalid DI Object arg default value error.\";\n\t}\n}\n\nexport default InvalidDIObjectArgDefaultValue;\n","class InvalidDIObjectArgumentName extends Error {\n\tconstructor(type, argName) {\n\t\tconst message = `Invalid argument name { ${argName} } in ${type}. There is no object with name { ${argName} } in DI Container.`;\n\t\tsuper(message);\n\t\tthis.name = \"Invalid DI Object arg name error.\";\n\t}\n}\n\nexport default InvalidDIObjectArgumentName;\n","class NotAllowedDIObjectType extends Error {\n\tconstructor(data) {\n\t\tconst message = `Not allowed DI object type of ${data.__proto__.prototype.name}. DI object must be class or function.`;\n\t\tsuper(message);\n\t\tthis.name = \"Invalid DI Object type.\";\n\t}\n}\n\nexport default NotAllowedDIObjectType;\n","import { parseType } from \"../../../ReflectionJs/index.js\";\nimport DIClazz from \"../../DIClazz.js\";\n\nclass DependencyTreeNode extends DIClazz {\n\tconstructor(baseClazz, height, deps) {\n\t\tif (!(baseClazz instanceof DIClazz)) {\n\t\t\tthrow new Error(\"DependencyTreeNode 'baseClazz' is invalid. Constructor argument 'baseClazz' must be a DIClazz instance.\");\n\t\t}\n\t\tif (parseType(height) !== \"number\") {\n\t\t\tthrow new Error(\n\t\t\t\t`DependencyTreeNode 'height' is invalid (type - ${parseType(height)}). Constructor argument 'height' must be a number`,\n\t\t\t);\n\t\t}\n\t\tif (!Array.isArray(deps) || (deps.length && deps.find((d) => !(d instanceof DependencyTreeNode)))) {\n\t\t\tthrow new Error(\n\t\t\t\t\"DependencyTreeNode 'deps' is invalid. Constructor argument 'deps' must be an array of DependencyTreeNode instances.\",\n\t\t\t);\n\t\t}\n\t\tconst { key, name, type, isClass, lifecycle, constructor } = baseClazz;\n\t\tsuper(key, name, type, isClass, lifecycle, constructor);\n\t\tthis.height = height;\n\t\tthis.deps = deps;\n\t}\n}\n\nexport default DependencyTreeNode;\n","import { parseType } from \"../../../ReflectionJs/index.js\";\nimport DependencyTreeNode from \"./DependencyTreeNode.js\";\n\nclass BaseNodeInvalid extends Error {\n\tconstructor() {\n\t\tsuper(\"DependencyTree baseNode arg is invalid. Constructor argument 'baseNode' must be an instance of DependencyTreeNode\");\n\t}\n}\n\nclass DependencyTree {\n\tconstructor(baseNode) {\n\t\tif (!(baseNode instanceof DependencyTreeNode)) {\n\t\t\tthrow new BaseNodeInvalid();\n\t\t}\n\t\tthis.baseNode = baseNode;\n\t}\n\n\t#getDepsByHeight(height, node = this.baseNode) {\n\t\tconst deps = [];\n\t\tif (node.height < height) {\n\t\t\tnode.deps.forEach((dep) => {\n\t\t\t\tdeps.push(...this.#getDepsByHeight(height, dep));\n\t\t\t});\n\t\t} else if (node.height === height) {\n\t\t\tdeps.push(node);\n\t\t}\n\t\treturn deps;\n\t}\n\n\tgetDepsByHeight(height) {\n\t\tif (parseType(height) !== \"number\") {\n\t\t\tthrow new Error(\"getDepsByHeight arg 'height' is undefined. Argument 'height' value must be a positive number\");\n\t\t}\n\t\tif (height < 0) {\n\t\t\tthrow new Error(\"getDepsByHeight arg 'height' is a negative number. Argument 'height' value must be a positive number\");\n\t\t}\n\t\treturn this.#getDepsByHeight(height);\n\t}\n\n\tgroupByHeight() {\n\t\tlet currentHeight = 0;\n\t\tconst groups = [];\n\t\tlet currentDeps = this.getDepsByHeight(currentHeight);\n\t\twhile (currentDeps && currentDeps.length > 0) {\n\t\t\tgroups.push({\n\t\t\t\theight: currentHeight,\n\t\t\t\tdeps: currentDeps,\n\t\t\t});\n\t\t\tcurrentHeight++;\n\t\t\tcurrentDeps = this.getDepsByHeight(currentHeight);\n\t\t}\n\t\treturn groups;\n\t}\n}\n\nexport default DependencyTree;\n","import DependencyTree from \"./helpers/DependencyTree.js\";\n\nclass InvalidDIParent extends Error {\n\tconstructor() {\n\t\tsuper(\"Invalid di parent. Parent must be an instance of DIContainer or it's derived class, null or undefined.\");\n\t}\n}\n\nclass DIContainerClassTreeListInvalid extends Error {\n\tconstructor() {\n\t\tsuper(\n\t\t\t\"DIContainer constructor's argument 'classTreeList' is invalid. \" +\n\t\t\t\t\"Argument 'classTreeList' must be an array of DependencyTree instances\",\n\t\t);\n\t}\n}\n\nclass DIContainer {\n\tconstructor(parent, classTreeList = []) {\n\t\tif (parent !== null && parent !== undefined && !(parent instanceof DIContainer)) {\n\t\t\tthrow new InvalidDIParent();\n\t\t}\n\t\tif (!Array.isArray(classTreeList) || (classTreeList.length && classTreeList.find((clsTree) => !(clsTree instanceof DependencyTree)))) {\n\t\t\tthrow new DIContainerClassTreeListInvalid();\n\t\t}\n\t\tthis.classTreeList = classTreeList;\n\t}\n\n\t// _createInstance() { } // protected method\n\n\thasInstance() {}\n\n\tgetInstance() {}\n\n\tfilterInstances() {}\n\n\tgetParent() {}\n\n\t// eslint-disable-next-line no-unused-vars\n\ttypeMatch(key, type) {\n\t\t// is DI object with key instance of type\n\t}\n}\n\nexport default DIContainer;\n","import { parseType } from \"../../../ReflectionJs/index.js\";\nimport { InvalidDIObjectName, InvalidDIObjectParent, UnregisteredDIObjectLifecycle } from \"../../DIObjectConfig.js\";\nimport Lifecycle from \"../../lifecycle/Lifecycle.js\";\n// eslint-disable-next-line no-unused-vars\nimport ContextContainer from \"../ContextContainer.js\";\nimport AbstractContextContainer from \"../AbstractContextContainer.js\";\n// import deepEqual from \"../../utils/deepEqual\";\nimport DIObjectKey from \"./DIObjectKey.js\";\nimport LifecycleEnum from \"../../constants/LifecycleEnum.js\";\n\nclass NotUniqueDIObjectKey extends Error {\n\tconstructor({ parent, name, lifecycle, isClass }) {\n\t\tconst message = `DI key with description {\n            parent: ${parent ? parent.name : \"null\"},\n            name: ${name},\n            lifecycle: ${lifecycle.id},\n            isClass: ${isClass}\n        } isn't unique. There is another DI object with this key.`;\n\t\tsuper(message);\n\t\tthis.name = \"NotUniqueDIKey\";\n\t}\n}\n\nclass DIObjectKeyFactory {\n\tconstructor(keys = new Set()) {\n\t\tthis.#keys = keys;\n\t}\n\n\t#keys;\n\n\tcreateKey(parent, name, lifecycle, isClass) {\n\t\tif (!(parent instanceof AbstractContextContainer)) {\n\t\t\tthrow new Error(\"DIObjectKeyFactory.create() 'parent' arg is invalid. 'parent' must be an instance of AbstractContextContainer\");\n\t\t}\n\t\tif (parseType(name) !== \"string\") {\n\t\t\tthrow new Error(\"DIObjectKeyFactory.create() 'name' arg is invalid. 'name' must be a string.\");\n\t\t}\n\t\tif (name === \"\") {\n\t\t\tthrow new Error(\"DIObjectKeyFactory.create() 'name' arg is empty.\");\n\t\t}\n\t\tif (!(lifecycle instanceof Lifecycle)) {\n\t\t\tthrow new Error(\"DIObjectKeyFactory.create() 'lifecycle' arg is invalid. 'lifecycle' must be an instance of Lifecycle\");\n\t\t}\n\t\tif (parseType(isClass) !== \"boolean\") {\n\t\t\tthrow new Error(\"DIObjectKeyFactory.create() 'isClass' arg type is invalid. 'isClass' type must be boolean\");\n\t\t}\n\t\tthis.#validateKeyParams(parent, name, lifecycle, isClass);\n\t\tconst keyDescription = {\n\t\t\tparent,\n\t\t\tname,\n\t\t\tlifecycle,\n\t\t\tisClass,\n\t\t};\n\t\tconst keyDescriptionStr = this.#stringifyKeyDescription(keyDescription);\n\t\tlet keyExisted = null;\n\t\tthis.#keys.forEach((objectKey) => {\n\t\t\t// if (typeof objectKey.key === 'symbol') {\n\t\t\t//     if (deepEqual(Symbol.keyFor(objectKey.key), keyDescription)) {\n\t\t\t//         keyExisted = true;\n\t\t\t//     }\n\t\t\t// } else {\n\t\t\tif (objectKey.key === keyDescriptionStr) keyExisted = true;\n\t\t\t// }\n\t\t});\n\t\tif (keyExisted) throw new NotUniqueDIObjectKey(keyDescription);\n\t\t// const key = new DIObjectKey(Symbol.for(keyDescriptionStr));\n\t\tconst key = new DIObjectKey(keyDescriptionStr);\n\t\tthis.#keys.add(key);\n\t\treturn key;\n\t}\n\n\t#stringifyKeyDescription({ parent, name, lifecycle, isClass }) {\n\t\treturn `@${parent?.name}/${name}/${lifecycle.id}/${isClass}`;\n\t}\n\n\t// eslint-disable-next-line no-unused-vars\n\t#validateKeyParams(parent, name, lifecycle, isClass) {\n\t\tif (parent && !(parent instanceof AbstractContextContainer)) {\n\t\t\tthrow new InvalidDIObjectParent();\n\t\t}\n\t\tif (!(typeof name === \"string\" || typeof name === \"symbol\") || !name === true) {\n\t\t\tthrow new InvalidDIObjectName(name);\n\t\t}\n\t\tif (!Object.values(LifecycleEnum).find((v) => v === lifecycle.id)) {\n\t\t\tthrow new UnregisteredDIObjectLifecycle(lifecycle);\n\t\t}\n\t\treturn true;\n\t}\n}\n\nexport default DIObjectKeyFactory;\n","import DIClazz from \"../../DIClazz.js\";\nimport DependencyTree from \"./DependencyTree.js\";\nimport DependencyTreeNode from \"./DependencyTreeNode.js\";\n\nclass InvalidBaseClazz extends Error {\n\tconstructor() {\n\t\tsuper(\"Argument 'baseClazz' is invalid. 'baseClazz' must be an instance of DIClazz\");\n\t\tthis.name = \"DependencyTreeFactory.createDependencyTree() Error\";\n\t}\n}\n\nclass InvalidAllClasses extends Error {\n\tconstructor() {\n\t\tsuper(\"Argument 'allClasses' is invalid. 'allClasses' must be a not empty array of DIClazz instances\");\n\t\tthis.name = \"DependencyTreeFactory.createDependencyTree() Error\";\n\t}\n}\n\nclass DependencyTreeFactory {\n\tstatic createDependencyTree(baseClazz, allClasses) {\n\t\tif (!(baseClazz instanceof DIClazz)) {\n\t\t\tthrow new InvalidBaseClazz();\n\t\t}\n\t\tif (\n\t\t\t!Array.isArray(allClasses) ||\n\t\t\t(allClasses.length && allClasses.findIndex((cls) => !(cls instanceof DIClazz)) !== -1) ||\n\t\t\t!allClasses.length\n\t\t) {\n\t\t\tthrow new InvalidAllClasses();\n\t\t}\n\t\tconst baseNode = new DependencyTreeNode(baseClazz, 0, []);\n\t\tDependencyTreeFactory.#buildDependencyTree(baseNode, allClasses);\n\t\treturn new DependencyTree(baseNode);\n\t}\n\n\tstatic #addDependencyToNode(node, dep) {\n\t\tnode.deps.push(dep);\n\t}\n\n\tstatic #buildDependencyTree(node, allClasses) {\n\t\tif (node.constructor.args.length > 0) {\n\t\t\tnode.constructor.args.forEach((arg) => {\n\t\t\t\tconst argClazz = allClasses.find((cls) => cls.name === arg);\n\t\t\t\tconst nextNode = new DependencyTreeNode(argClazz, node.height + 1, []);\n\t\t\t\tDependencyTreeFactory.#addDependencyToNode(node, nextNode);\n\t\t\t\tDependencyTreeFactory.#buildDependencyTree(nextNode, allClasses);\n\t\t\t});\n\t\t} else {\n\t\t\treturn node;\n\t\t}\n\t}\n}\n\nexport default DependencyTreeFactory;\n","import {\n\tgetArgumentDefaultValue,\n\tgetBaseClass,\n\tgetClassConstructorArgsNames,\n\tgetFunctionArgsNames,\n\tparseType,\n} from \"../../ReflectionJs/index.js\";\n// eslint-disable-next-line no-unused-vars\nimport DIClazz from \"../DIClazz.js\";\nimport { DIObjectConfig } from \"../DIObjectConfig.js\";\nimport DependencyLoopError from \"../errors/DependencyLoopError.js\";\nimport InvalidDIObjectArgDefaultValue from \"../errors/InvalidDIObjectArgDefaultValue.js\";\nimport InvalidDIObjectArgumentName from \"../errors/InvalidDIObjectArgumentName.js\";\nimport NotAllowedDIObjectType from \"../errors/NotAllowDIObjectType.js\";\nimport DIContainer from \"./DIContainer.js\";\nimport DIObjectKeyFactory from \"./helpers/DIObjectKeyFactory.js\";\nimport DependencyTreeFactory from \"./helpers/DependencyTreeFactory.js\";\n\n// class DIObjectHasInvalidName extends Error {\n// \tconstructor(name, contextName) {\n// \t\tconst message = `DI Object has invalid name { ${name} }. Rename this DI object in ${contextName} context config.`;\n// \t\tsuper(message);\n// \t\tthis.name = \"DI Object's name is invalid\";\n// \t}\n// }\n\n// class DIObjectHasInvalidLifecycleIdentifier extends Error {\n// \tconstructor(lifecycleId, contextName) {\n// \t\tconst message = `DI Object has invalid lifecycle identifier { ${lifecycleId} }. Change this DI object in ${contextName} context config.`;\n// \t\tsuper(message);\n// \t\tthis.name = \"DI Object's lifecycle identifier is invalid\";\n// \t}\n// }\n\n// class DIConfigHasObjectsWithRepeatedNames extends Error {\n//     constructor(names, contextName) {\n//         const message = `There are DI objects with the same names { ${names.join(', ')} } in ${contextName} context config.`;\n//         super(message);\n//         this.name = \"DI Config has objects with repeated names\";\n//     }\n// }\n\nclass DerivedClassConstructorArgsError extends Error {\n\tconstructor(derivedClassName, baseClassName) {\n\t\tconst message = `The number of constructor arguments in the derived class ${derivedClassName} must be >= than the number of\n            constructor arguments of its base class ${baseClassName}.`;\n\t\tsuper(message);\n\t\tthis.name = \"Derived class constructor args count error\";\n\t}\n}\n\nclass InvalidContextConfig extends Error {\n\tconstructor() {\n\t\tsuper(\"Invalid context config. Config must be an array of DIObjectConfig instances\");\n\t}\n}\n\nclass InvalidContextParent extends Error {\n\tconstructor() {\n\t\tsuper(\"Invalid context parent. Parent must be an instance of AbstractContextContainer or it's derived class, null or undefined.\");\n\t}\n}\n\nclass InvalidDIObjectKeyFactory extends Error {\n\tconstructor() {\n\t\tsuper(\"Invalid context keyFactory. KeyFactory must be an instance of DIObjectKeyFactory or it's derived class\");\n\t}\n}\n\nclass InvalidContextChild extends Error {\n\tconstructor() {\n\t\tsuper(\"Invalid context child. Child must be an instance of AbstractContextContainer or it's derived class, null or undefined.\");\n\t}\n}\n\nclass AbstractContextContainer extends DIContainer {\n\tconstructor(config = [], name = \"\", parent = null, keyFactory = new DIObjectKeyFactory()) {\n\t\tif (!Array.isArray(config) || config.find((c) => !(c instanceof DIObjectConfig))) {\n\t\t\tthrow new InvalidContextConfig();\n\t\t}\n\t\tif (parent !== null && parent !== undefined && !(parent instanceof AbstractContextContainer)) {\n\t\t\tthrow new InvalidContextParent();\n\t\t}\n\t\tif (!name) {\n\t\t\tthrow new Error(\"Name of Context must be a non empty string.\");\n\t\t}\n\t\tif (!(keyFactory instanceof DIObjectKeyFactory)) {\n\t\t\tthrow new InvalidDIObjectKeyFactory();\n\t\t}\n\t\tsuper(parent, []);\n\t\tthis.config = config;\n\t\tthis.name = name;\n\t\tif (parent instanceof AbstractContextContainer) {\n\t\t\tif (parent.getChildren().has(this.name)) {\n\t\t\t\tthrow new Error(\"Parent already has this context as a child.\");\n\t\t\t}\n\t\t\tthis.#parent = parent;\n\t\t\tparent._addChild(this);\n\t\t}\n\t\tthis.#keyFactory = keyFactory;\n\t}\n\n\t#contextReady = false;\n\t#parent;\n\t#keyFactory;\n\t#clazzes = [];\n\t#children = new Map();\n\n\tclassTreeList = [];\n\n\tscopes = new Map();\n\n\tinit() {\n\t\t// this.#validateDIConfig();\n\t\tif (this.#contextReady) return;\n\t\tthis.classTreeList = [];\n\t\tthis.#initClazzes();\n\t\tthis.#validateObjectsArgsNames();\n\t\tthis.#validateDependencyGraph();\n\t\tthis.#initClassTreeList();\n\t\tthis.classTreeList.sort((a, b) => {\n\t\t\treturn a.baseNode.constructor.args.length - b.baseNode.constructor.args.length;\n\t\t});\n\t\tthis._createScopes();\n\t\tthis._initScopes();\n\t\tthis.#children.forEach((child) => {\n\t\t\tif (child.init) {\n\t\t\t\tchild.init();\n\t\t\t}\n\t\t});\n\t\tthis.#contextReady = true;\n\t}\n\n\t#initClazzes() {\n\t\tthis.#clazzes = this.config.map((containerObject) => {\n\t\t\tconsole.log(containerObject.type.toString());\n\t\t\tconst objName = typeof containerObject.name === \"symbol\" ? Symbol.keyFor(containerObject.name) : containerObject.name;\n\t\t\tconst typeOfContainerObject = parseType(containerObject.type);\n\t\t\tif (typeOfContainerObject !== \"class\" && typeOfContainerObject !== \"function\" && typeOfContainerObject !== \"function class\") {\n\t\t\t\tthrow new NotAllowedDIObjectType(containerObject.type);\n\t\t\t}\n\t\t\tconst isClass = typeOfContainerObject === \"class\" || typeOfContainerObject === \"function class\";\n\t\t\tconst constructorArgs =\n\t\t\t\ttypeOfContainerObject === \"class\"\n\t\t\t\t\t? getClassConstructorArgsNames(containerObject.type)\n\t\t\t\t\t: getFunctionArgsNames(containerObject.type);\n\t\t\tconst constructor = {\n\t\t\t\t...constructorArgs,\n\t\t\t\targs: constructorArgs.args.map((arg) => {\n\t\t\t\t\tconst defaultValue = getArgumentDefaultValue(arg);\n\t\t\t\t\tif (defaultValue && defaultValue.value) {\n\t\t\t\t\t\tconsole.log(defaultValue);\n\t\t\t\t\t\tconst obj = this.config.find((cls) => cls.type.name === defaultValue.value);\n\t\t\t\t\t\tif (!obj) {\n\t\t\t\t\t\t\tconsole.log(containerObject);\n\t\t\t\t\t\t\tthrow new InvalidDIObjectArgDefaultValue(containerObject.name, defaultValue.name, defaultValue.value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn typeof obj.name === \"symbol\" ? Symbol.keyFor(obj.name) : obj.name;\n\t\t\t\t\t}\n\t\t\t\t\treturn arg;\n\t\t\t\t}),\n\t\t\t};\n\t\t\treturn new DIClazz(\n\t\t\t\tthis.#keyFactory.createKey(this, objName, containerObject.lifecycle, isClass),\n\t\t\t\tobjName,\n\t\t\t\tcontainerObject.type,\n\t\t\t\tisClass,\n\t\t\t\tcontainerObject.lifecycle,\n\t\t\t\tconstructor,\n\t\t\t);\n\t\t\t// ToDo Правила жизненных циклов\n\t\t});\n\t}\n\n\t#initClassTreeList() {\n\t\tthis.classTreeList = this.#clazzes.map((clazz) => DependencyTreeFactory.createDependencyTree(clazz, this.#clazzes));\n\t}\n\n\t_createScopes() {}\n\n\t_initScopes() {}\n\n\t// eslint-disable-next-line no-unused-vars\n\thasInstance(name) {}\n\n\t// eslint-disable-next-line no-unused-vars\n\tgetInstance(name, lifecycleId) {}\n\n\t_findClassTree(name, lifecycleId) {\n\t\tlet findCallback;\n\t\tswitch (typeof name) {\n\t\t\tcase \"string\":\n\t\t\t\tfindCallback = (cls) => cls.baseNode.name === name;\n\t\t\t\tbreak;\n\t\t\tcase \"symbol\":\n\t\t\t\tfindCallback = (cls) => cls.baseNode.name === Symbol.keyFor(name);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tfindCallback = (cls) => cls.baseNode.type.name === name.name;\n\t\t\t\tbreak;\n\t\t}\n\t\tlet clazz;\n\t\tif (lifecycleId !== undefined) {\n\t\t\tclazz = [...this.classTreeList].filter((cls) => cls.baseNode.lifecycle.id === lifecycleId).find(findCallback);\n\t\t} else {\n\t\t\t// find first class by key in order from Persistent to Demanded\n\t\t\tclazz = [...this.classTreeList].sort((a, b) => a.baseNode.lifecycle.id - b.baseNode.lifecycle.id).find(findCallback);\n\t\t}\n\t\tif (!clazz) {\n\t\t\treturn undefined;\n\t\t\t// throw new HasNoDIObjectWithKey(typeof name !== 'string' ? name.name : name, this.name);\n\t\t}\n\t\treturn clazz;\n\t}\n\n\t// eslint-disable-next-line no-unused-vars\n\ttypeMatch(key, type) {\n\t\t// is DI object with key instance of type\n\t}\n\n\tgetParent() {\n\t\treturn this.#parent;\n\t}\n\n\t_removeParent() {\n\t\tthis.#parent = null;\n\t}\n\n\t_getChildInstance(name, lifecycleId) {\n\t\tlet instance;\n\t\tconst childContext = [...this.#children.values()].find((context) => {\n\t\t\tinstance = context.getInstance(name, lifecycleId);\n\t\t\treturn instance !== undefined;\n\t\t});\n\t\treturn childContext ? instance : undefined;\n\t}\n\n\tgetChildren() {\n\t\treturn this.#children;\n\t}\n\n\t_addChild(childContext) {\n\t\tif (!(childContext instanceof AbstractContextContainer)) {\n\t\t\tthrow new InvalidContextChild();\n\t\t}\n\t\tthis.#children.set(childContext.name, childContext);\n\t}\n\n\tdeleteChild(childName) {\n\t\tif (!this.#children.has(childName)) {\n\t\t\treturn;\n\t\t}\n\t\tthis.#children.get(childName)._removeParent();\n\t\tthis.#children.delete(childName);\n\t}\n\n\t// eslint-disable-next-line no-unused-vars\n\tgetScope(lifecycleId) {}\n\n\tfilterClassesByLifecycle(lifecycleId) {\n\t\treturn this.classTreeList.filter((cls) => cls.baseNode.lifecycle.id === lifecycleId);\n\t}\n\n\t// eslint-disable-next-line no-unused-vars\n\t#validateDIConfig(config) {\n\t\t// Check if there are objects with invalid name\n\t\t// !name !== true || typeof name === 'string'\n\t\t// if (!Array.isArray(config) || config.find(c => !(c instanceof DIObjectConfig))) {\n\t\t//     throw new InvalidContextConfig();\n\t\t// }\n\t\t// const objectWithInvalidName = config.find(({ name }) => !name === true || !(typeof name === 'string' || typeof name === 'symbol'));\n\t\t// if (objectWithInvalidName) {\n\t\t//     throw new DIObjectHasInvalidName(objectWithInvalidName.name, this.name);\n\t\t// }\n\t\t// Accept repeated names *, if these objects have other lifecycle\n\t\t// Check if there are objects with the same names\n\t\t// const configSet = new Set(this.config.map((objectConfig) => objectConfig.name));\n\t\t// if (this.config.length !== configSet.size) {\n\t\t//     const objectsByNames = Object.fromEntries(Array.from(configSet.values()).map(key => ([\n\t\t//         key,\n\t\t//         this.config.filter((objectConfig) => objectConfig.name === key),\n\t\t//     ])));\n\t\t//     const objectsWithRepeatedNames = Object.entries(objectsByNames).filter(([name, items]) => items.length > 1);\n\t\t//     throw new DIConfigHasObjectsWithRepeatedNames(objectsWithRepeatedNames.map(obj => obj[0]), this.name);\n\t\t// }\n\t\t// Check object lifecycle\n\t\t// Change this conditions after Lifecycle class will be defined.\n\t\t// lifecycle prop must be an instance of Lifecycle (it's checked in DIObjectConfig constructor)\n\t\t// !!! now we don't need to registrate id in LifecycleEnum, because it's done in Lifecycle's constructor\n\t\t// const objectWithInvalidLifecycle = this.config.find(({ lifecycle }) => {\n\t\t//     return !(lifecycle instanceof Lifecycle)\n\t\t//         || !Object.values(LifecycleEnum).find(v => v === lifecycle.id);\n\t\t// });\n\t\t// if (objectWithInvalidLifecycle) {\n\t\t//     throw new DIObjectHasInvalidLifecycleIdentifier(objectWithInvalidLifecycle.lifecycle.id, this.name);\n\t\t// }\n\t\t// Check Inheritance Hierarchy\n\t\t// this.config.forEach((clazz) => this.#validateInheritanceHierarchy(clazz.type));\n\t}\n\n\t#validateObjectsArgsNames() {\n\t\tconst argsSet = new Set();\n\t\tthis.#clazzes.forEach((cls) =>\n\t\t\tcls.constructor.args.forEach((arg) =>\n\t\t\t\targsSet.add({\n\t\t\t\t\tname: arg,\n\t\t\t\t\tplace: cls.name,\n\t\t\t\t}),\n\t\t\t),\n\t\t);\n\t\targsSet.forEach((arg) => {\n\t\t\tconst cls = this.#clazzes.find((elem) => elem.name === arg.name);\n\t\t\tif (cls === undefined) {\n\t\t\t\tthrow new InvalidDIObjectArgumentName(arg.place, arg.name);\n\t\t\t}\n\t\t});\n\t}\n\n\t#validateInheritanceHierarchy(clazz) {\n\t\t// check inheritance existence\n\t\t// if base class exist and it is not an Object Class,\n\t\t//    check if base class is a part of this di context\n\t\t//      check if constructor arguments count <= derived class constructor args count and return to beggining,\n\t\t//\t\t\totherwise throw an exception\n\t\t// else return true\n\t\tif (parseType(clazz) !== \"class\") return true;\n\t\tconst baseClass = getBaseClass(clazz);\n\t\tconst isAnotherDIObject = this.config.findIndex((objConfig) => objConfig.type.name === baseClass.name) !== -1;\n\t\tconsole.log(clazz.name, baseClass.name, isAnotherDIObject);\n\t\tif (baseClass.name !== \"Object\") {\n\t\t\tif (isAnotherDIObject) {\n\t\t\t\tconst clsConstructorArgs = getClassConstructorArgsNames(clazz).args;\n\t\t\t\tconst baseClsConstructorArgs = getClassConstructorArgsNames(baseClass).args;\n\t\t\t\tif (clsConstructorArgs.length < baseClsConstructorArgs.length) {\n\t\t\t\t\tthrow new DerivedClassConstructorArgsError(clazz.name, baseClass.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this.#validateInheritanceHierarchy(baseClass);\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t#validateDependencyGraph() {\n\t\tthis.#clazzes.forEach((cls) => {\n\t\t\tcls.constructor.args.forEach((arg) => {\n\t\t\t\tthis.#findDependencyLoop([cls.name, arg], arg);\n\t\t\t});\n\t\t});\n\t\treturn true;\n\t}\n\n\t#findDependencyLoop(depsList = [], argName) {\n\t\tif (this.#clazzes.length === 0) return;\n\t\tif (argName === undefined) argName = this.#clazzes[0].name;\n\t\tconst cls = this.#clazzes.find((cls) => cls.name === argName);\n\t\tcls.constructor.args.forEach((elem) => {\n\t\t\tif (depsList.includes(elem)) {\n\t\t\t\tthrow new DependencyLoopError(elem, cls.name);\n\t\t\t} else {\n\t\t\t\tthis.#findDependencyLoop([...depsList, elem], elem);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport default AbstractContextContainer;\n","class ContainerHasClassWithInvalidLifecycle extends Error {\n\tconstructor(containerScope, clazz) {\n\t\tconst message = `${containerScope}Container's classTreeList arg has class { ${clazz.name} } with another lifecycle.`;\n\t\tsuper(message);\n\t\tthis.name = \"DI Container has class with invalid lifecycle type\";\n\t}\n}\n\nexport default ContainerHasClassWithInvalidLifecycle;\n","class FunctionWrapper {\n\tconstructor(func, args) {\n\t\tthis.func = func;\n\t\tthis.args = args;\n\t\t// console.log('Func with args ', func, args);\n\t}\n\n\tcall() {\n\t\treturn this.func(...this.args);\n\t}\n}\n\nexport default FunctionWrapper;\n","import FunctionWrapper from \"../../wrappers/FunctionWrapper.js\";\n\nclass InstanceHelper {\n\tstatic createInstance(clazzTreeNode, argumentValues) {\n\t\tif (clazzTreeNode.isClass) {\n\t\t\treturn new clazzTreeNode.type(...argumentValues);\n\t\t} else {\n\t\t\treturn new FunctionWrapper(clazzTreeNode.type, argumentValues);\n\t\t}\n\t}\n}\n\nexport default InstanceHelper;\n","import AbstractContextContainer from \"./AbstractContextContainer.js\";\nimport DIContainer from \"./DIContainer.js\";\nimport InstanceHelper from \"./helpers/InstanceHelper.js\";\n\nclass InvalidSimpleContainerParent extends Error {\n\tconstructor() {\n\t\tsuper(\n\t\t\t\"Invalid simple container parent. Parent must be an instance of AbstractContextContainer or it's derived class, null or undefined.\",\n\t\t);\n\t}\n}\n\nclass SimpleContainer extends DIContainer {\n\tconstructor(parent, classTreeList = []) {\n\t\tif (!(parent instanceof AbstractContextContainer)) {\n\t\t\tthrow new InvalidSimpleContainerParent();\n\t\t}\n\t\tsuper(parent, classTreeList);\n\t}\n\n\t_buildInstance(clazzTree) {\n\t\t// create new instance and add it in Map\n\t\t// works\n\t\t// const groups = clazzTree.groupByHeight().reverse();\n\t\t// for (let i = 0; i < groups.length; i++) {\n\t\t//     for (let j = 0; j < groups[i].deps.length; j++) {\n\t\t//         const clazz = groups[i].deps[j];\n\t\t//         const argumentValues = [];\n\t\t//         clazz.deps.forEach((dependency) => {\n\t\t//             if (dependency.lifecycle.id !== LifecycleEnum.Demanded) {\n\t\t//                 argumentValues.push(this.getInstance(dependency.name) || this.getParent().getInstance(dependency.name));\n\t\t//             } else {\n\t\t//                 argumentValues.push(this.getParent().getInstance(dependency.name, dependency.lifecycle.id, true));\n\t\t//             }\n\t\t//         });\n\t\t//         if (clazz.lifecycle.id !== LifecycleEnum.Demanded) {\n\t\t//             const instance = InstanceHelper.createInstance(groups[i].deps[j], argumentValues);\n\t\t//             if (clazzTree.baseNode.lifecycle.id !== groups[i].deps[j].lifecycle.id) {\n\t\t//                 this.getParent().getScope(groups[i].deps[j].lifecycle.id).addInstance(groups[i].deps[j].key, instance);\n\t\t//             } else {\n\t\t//                 this.addInstance(groups[i].deps[j].key, instance);\n\t\t//             }\n\t\t//         }\n\t\t//     }\n\t\t// }\n\t\t// return this.getInstance(clazzTree.baseNode.name);\n\n\t\tconst argumentValues = [];\n\t\tif (clazzTree.baseNode.constructor.args.length > 0) {\n\t\t\tclazzTree.baseNode.constructor.args.forEach((arg) => {\n\t\t\t\tconst argClazz = this.getParent().classTreeList.find((clsTree) => clsTree.baseNode.name === arg);\n\t\t\t\tconst existedInstance =\n\t\t\t\t\tthis.getInstance(argClazz.baseNode.key) ||\n\t\t\t\t\tthis.getParent().getInstance(argClazz.baseNode.name, argClazz.baseNode.lifecycle.id, true);\n\t\t\t\tif (existedInstance) {\n\t\t\t\t\treturn argumentValues.push(existedInstance);\n\t\t\t\t}\n\t\t\t\tconsole.log(argClazz.baseNode.name);\n\t\t\t\targumentValues.push(this._buildInstance(argClazz));\n\t\t\t});\n\t\t}\n\t\tconst instance = InstanceHelper.createInstance(clazzTree.baseNode, argumentValues);\n\t\tthis.addInstance(clazzTree.baseNode.key, instance);\n\t\treturn instance;\n\t}\n\n\taddInstance() {}\n}\n\nexport default SimpleContainer;\n","const deepEqual = function (x, y) {\n\tif (x === y) {\n\t\treturn true;\n\t} else if (typeof x === \"object\" && x != null && typeof y === \"object\" && y != null) {\n\t\tif (Object.keys(x).length !== Object.keys(y).length) return false;\n\n\t\tfor (let prop in x) {\n\t\t\tif (y.hasOwnProperty(prop)) {\n\t\t\t\tif (!deepEqual(x[prop], y[prop])) return false;\n\t\t\t} else return false;\n\t\t}\n\n\t\treturn true;\n\t} else return false;\n};\n\nexport default deepEqual;\n","import deepEqual from \"../../utils/deepEqual.js\";\n\nclass InstancesMap extends Map {\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tgetBySymbol(symbolKey) {\n\t\tlet instance = undefined;\n\t\tthis.forEach((value, key) => {\n\t\t\tif (deepEqual(Symbol.keyFor(key), Symbol.keyFor(symbolKey))) {\n\t\t\t\tinstance = value;\n\t\t\t}\n\t\t});\n\t\treturn instance;\n\t}\n\n\thasBySymbol(symbolKey) {\n\t\tlet isExist = false;\n\t\tthis.forEach((value, key) => {\n\t\t\tif (deepEqual(Symbol.keyFor(key), Symbol.keyFor(symbolKey))) {\n\t\t\t\tisExist = true;\n\t\t\t}\n\t\t});\n\t\treturn isExist;\n\t}\n}\n\nexport default InstancesMap;\n","import LifecycleEnum from \"../constants/LifecycleEnum.js\";\nimport ContainerHasClassWithInvalidLifecycle from \"../errors/ContainerHasClassWithInvalidLifecycle.js\";\nimport SimpleContainer from \"./SimpleContainer.js\";\nimport DIObjectKey from \"./helpers/DIObjectKey.js\";\nimport InstancesMap from \"./helpers/InstancesMap.js\";\n\nclass SessionContainer extends SimpleContainer {\n\tconstructor(parent, classTreeList = []) {\n\t\tsuper(parent, classTreeList);\n\t\tconst classWithInvalidLifecycle = classTreeList.find((cls) => cls.baseNode.lifecycle.id !== LifecycleEnum.Session);\n\t\tif (classWithInvalidLifecycle) {\n\t\t\tthrow new ContainerHasClassWithInvalidLifecycle(\"Session\", classWithInvalidLifecycle);\n\t\t}\n\t\tthis.#parent = parent;\n\t\t// this.#init();\n\t}\n\n\t#isReady = false;\n\t#parent;\n\t#instances = new InstancesMap();\n\n\tinit() {\n\t\t// ToDo logs\n\t\tif (this.#isReady) return;\n\t\tthis.classTreeList.forEach((cls) => {\n\t\t\t// if (this.#instances.hasBySymbol(cls.baseNode.key.key)) {\n\t\t\t//     return;\n\t\t\t// }\n\t\t\tif (this.#instances.has(cls.baseNode.key.key)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.#buildInstance(cls);\n\t\t});\n\t\tthis.#isReady = true;\n\t}\n\n\t#buildInstance(clazz) {\n\t\tclazz.baseNode.lifecycle.beforeCreate();\n\t\tconst instance = this._buildInstance(clazz);\n\t\tclazz.baseNode.lifecycle.afterCreate.bind(instance)();\n\t\treturn instance;\n\t}\n\n\taddInstance(key, instance) {\n\t\t// check that key is valid (there is a classTree node with that key)\n\t\tif (!(key instanceof DIObjectKey)) {\n\t\t\tthrow new Error(`Invalid key type. Argument 'key' must be an instance of DIObjectKey class.`);\n\t\t}\n\t\t// delete this rule, because we need to access adding instance from outside\n\t\t// if (!this.classTreeList.find(clsTree => clsTree.baseNode.key.key === key.key)) {\n\t\t//     throw new Error(`ClassTree with key ${key.key} in '${this.getParent().name}/SingletoneContainer' not found.`);\n\t\t// }\n\t\tthis.#instances.set(key.key, instance);\n\t}\n\n\thasInstance(key) {\n\t\tif (!this.#isReady) return false;\n\t\tif (!(key instanceof DIObjectKey)) {\n\t\t\tthrow new Error(`Invalid argument 'key'. Argument 'key' must be an instance of DIObjectKey.`);\n\t\t}\n\t\treturn this.#instances.has(key.key);\n\t}\n\n\tgetInstance(key) {\n\t\t// return this.#instances.getBySymbol(key.key);\n\t\tif (!this.#isReady) return undefined;\n\t\treturn this.#instances.get(key.key);\n\t}\n\n\tgetParent() {\n\t\treturn this.#parent;\n\t}\n}\n\nexport default SessionContainer;\n","import LifecycleEnum from \"../constants/LifecycleEnum.js\";\nimport ContainerHasClassWithInvalidLifecycle from \"../errors/ContainerHasClassWithInvalidLifecycle.js\";\nimport SimpleContainer from \"./SimpleContainer.js\";\nimport DIObjectKey from \"./helpers/DIObjectKey.js\";\nimport InstancesMap from \"./helpers/InstancesMap.js\";\n\nclass SingletoneContainer extends SimpleContainer {\n\tconstructor(parent, classTreeList = []) {\n\t\tsuper(parent, classTreeList);\n\t\tconst classWithInvalidLifecycle = classTreeList.find((cls) => cls.baseNode.lifecycle.id !== LifecycleEnum.Singletone);\n\t\tif (classWithInvalidLifecycle) {\n\t\t\tthrow new ContainerHasClassWithInvalidLifecycle(\"Singletone\", classWithInvalidLifecycle);\n\t\t}\n\t\tthis.#parent = parent;\n\t}\n\n\t#parent;\n\t#instances = new InstancesMap();\n\n\t#buildInstance(clazz) {\n\t\tclazz.baseNode.lifecycle.beforeCreate();\n\t\tconst instance = this._buildInstance(clazz);\n\t\tclazz.baseNode.lifecycle.afterCreate.bind(instance)();\n\t\treturn instance;\n\t}\n\n\taddInstance(key, instance) {\n\t\t// check that key is valid (there is a classTree node with that key)\n\t\tif (!(key instanceof DIObjectKey)) {\n\t\t\tthrow new Error(`Invalid key type. Argument 'key' must be an instance of DIObjectKey class.`);\n\t\t}\n\t\t// delete this rule, because we need to access adding instance from outside\n\t\t// if (!this.classTreeList.find(clsTree => clsTree.baseNode.key.key === key.key)) {\n\t\t//     throw new Error(`ClassTree with key ${key.key} in '${this.getParent().name}/SingletoneContainer' not found.`);\n\t\t// }\n\t\tthis.#instances.set(key.key, instance);\n\t}\n\n\thasInstance(key) {\n\t\treturn this.#instances.has(key.key);\n\t}\n\n\tgetInstance(key) {\n\t\t// const existed = this.#instances.getBySymbol(key.key);\n\t\tconst existed = this.#instances.get(key.key);\n\t\tif (existed) {\n\t\t\treturn existed;\n\t\t}\n\t\t// const clazz = this.classTreeList.find(cls => deepEqual(Symbol.keyFor(cls.baseNode.key.key), Symbol.keyFor(key.key)));\n\t\tconst clazz = this.classTreeList.find((cls) => cls.baseNode.key.key === key.key);\n\t\tif (!clazz) {\n\t\t\tconsole.log(\"nonono\");\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this.#buildInstance(clazz);\n\t}\n\n\tgetParent() {\n\t\treturn this.#parent;\n\t}\n}\n\nexport default SingletoneContainer;\n","import LifecycleEnum from \"../constants/LifecycleEnum.js\";\nimport ContainerHasClassWithInvalidLifecycle from \"../errors/ContainerHasClassWithInvalidLifecycle.js\";\n// import deepEqual from \"../utils/deepEqual.js\";\nimport AbstractContextContainer from \"./AbstractContextContainer.js\";\nimport DependencyTree from \"./helpers/DependencyTree.js\";\nimport InstanceHelper from \"./helpers/InstanceHelper.js\";\n\nclass InvalidDemandedFactoryParent extends Error {\n\tconstructor() {\n\t\tsuper(\n\t\t\t\"Invalid demanded factory parent. \" +\n\t\t\t\t\"Parent must be an instance of AbstractContextContainer or it's derived class, null or undefined.\",\n\t\t);\n\t}\n}\n\nclass DemandedFactoryClassTreeListInvalid extends Error {\n\tconstructor() {\n\t\tsuper(\n\t\t\t\"DemandedFactory constructor's argument 'classTreeList' is invalid. \" +\n\t\t\t\t\"Argument 'classTreeList' must be an array of DependencyTree instances\",\n\t\t);\n\t}\n}\n\nclass DemandedFactory {\n\tconstructor(parent, classTreeList = []) {\n\t\tif (!(parent instanceof AbstractContextContainer)) {\n\t\t\tthrow new InvalidDemandedFactoryParent();\n\t\t}\n\t\tif (!Array.isArray(classTreeList) || (classTreeList.length && classTreeList.find((clsTree) => !(clsTree instanceof DependencyTree)))) {\n\t\t\tthrow new DemandedFactoryClassTreeListInvalid();\n\t\t}\n\t\tconst classWithInvalidLifecycle = classTreeList.find((cls) => cls.baseNode.lifecycle.id !== LifecycleEnum.Demanded);\n\t\tif (classWithInvalidLifecycle) {\n\t\t\tthrow new ContainerHasClassWithInvalidLifecycle(\"Demanded\", classWithInvalidLifecycle);\n\t\t}\n\t\tthis.classTreeList = classTreeList;\n\t\tthis.#parent = parent;\n\t}\n\n\t#parent;\n\n\t#buildInstance(clazzTree) {\n\t\tconst argumentValues = [];\n\t\tif (clazzTree.baseNode.constructor.args.length > 0) {\n\t\t\tclazzTree.baseNode.constructor.args.forEach((arg) => {\n\t\t\t\tconst argClazz = this.getParent().classTreeList.find((clsTree) => clsTree.baseNode.name === arg);\n\t\t\t\tconst existedInstance =\n\t\t\t\t\targClazz.baseNode.lifecycle.id !== LifecycleEnum.Demanded\n\t\t\t\t\t\t? this.getParent().getInstance(argClazz.baseNode.name, argClazz.baseNode.lifecycle.id, true)\n\t\t\t\t\t\t: undefined;\n\t\t\t\tif (existedInstance) {\n\t\t\t\t\treturn argumentValues.push(existedInstance);\n\t\t\t\t}\n\t\t\t\targumentValues.push(this.createInstance(argClazz.baseNode.key));\n\t\t\t});\n\t\t}\n\t\tclazzTree.baseNode.lifecycle.beforeCreate();\n\t\tconst instance = InstanceHelper.createInstance(clazzTree.baseNode, argumentValues);\n\t\tconsole.log(instance);\n\t\tclazzTree.baseNode.lifecycle.afterCreate.bind(instance)();\n\t\tconsole.log(clazzTree.baseNode.name, \"new instance\");\n\t\treturn instance;\n\t}\n\n\tcreateInstance(key) {\n\t\t// create new instance and add it in Map\n\t\tconsole.log(key);\n\t\t// const clazz = this.classTreeList.find(cls => deepEqual(Symbol.keyFor(cls.baseNode.key.key), Symbol.keyFor(key.key)));\n\t\tconst clazz = this.classTreeList.find((cls) => cls.baseNode.key.key === key.key);\n\t\tif (!clazz) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this.#buildInstance(clazz);\n\t}\n\n\tgetParent() {\n\t\treturn this.#parent;\n\t}\n}\n\nexport default DemandedFactory;\n","const generateRandomString = (length) => {\n\tlet str = \"\";\n\tconst chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\tfor (let i = 0; i < length; i++) {\n\t\tstr += chars.charAt(Math.floor(Math.random() * length));\n\t}\n\treturn str;\n};\n\nexport default generateRandomString;\n","import AbstractContextContainer from \"./AbstractContextContainer.js\";\nimport DIObjectKeyFactory from \"./helpers/DIObjectKeyFactory.js\";\nimport SessionContainer from \"./SessionContainer.js\";\nimport SingletoneContainer from \"./SingletoneContainer.js\";\nimport DemandedFactory from \"./DemandedFactory.js\";\nimport generateRandomString from \"../utils/generateRandomString.js\";\nimport LifecycleEnum from \"../constants/LifecycleEnum.js\";\n\nclass NotUniqueContextContainerName extends Error {\n\tconstructor(name) {\n\t\tsuper(`Context name '${name}' is not unique. Context name must be unique string.`);\n\t}\n}\n\nclass InvalidContextContainerNameType extends Error {\n\tconstructor() {\n\t\tsuper(`Invalid context name type. Type of context name must be a string.`);\n\t}\n}\n\nclass ContextContainer extends AbstractContextContainer {\n\tconstructor(config = [], name = \"\", parent = null, keyFactory = new DIObjectKeyFactory()) {\n\t\tif (name === \"\") {\n\t\t\tname = generateRandomString(7);\n\t\t}\n\t\tsuper(config, name, parent, keyFactory);\n\t\tContextContainer.#addName(name);\n\t\t// this.#parent = parent;\n\t\t// this.#keyFactory = keyFactory;\n\t}\n\n\tstatic #names = new Set();\n\tstatic #addName(name) {\n\t\tif (typeof name !== \"string\") {\n\t\t\tthrow new InvalidContextContainerNameType();\n\t\t}\n\t\tif (this.#names.has(name)) {\n\t\t\tthrow new NotUniqueContextContainerName(name);\n\t\t}\n\t\tthis.#names.add(name);\n\t}\n\n\t// #parent;\n\t// #keyFactory;\n\n\tscopes = new Map();\n\n\t_createScopes() {\n\t\t// sort scopes initialization order by desc of lifecycle id (order: Demanded -> Singletone -> Session -> Persistent)\n\t\tconst scopesTypes = new Set(this.classTreeList.map((cls) => cls.baseNode.lifecycle).sort((a, b) => b.id - a.id));\n\t\tscopesTypes.forEach((lifecycle) => {\n\t\t\tswitch (lifecycle.id) {\n\t\t\t\t// case LifecycleEnum.Persistent:\n\t\t\t\t//     this.scopes.set(lifecycle, new PersistentContainer(this, this.filterClassesByLifecycle(LifecycleEnum.Persistent)));\n\t\t\t\t//     console.log(this.scopes);\n\t\t\t\t//     break;\n\t\t\t\tcase LifecycleEnum.Session:\n\t\t\t\t\tthis.scopes.set(lifecycle.id, new SessionContainer(this, this.filterClassesByLifecycle(LifecycleEnum.Session)));\n\t\t\t\t\t// console.log(this.scopes);\n\t\t\t\t\tbreak;\n\t\t\t\tcase LifecycleEnum.Singletone:\n\t\t\t\t\tthis.scopes.set(lifecycle.id, new SingletoneContainer(this, this.filterClassesByLifecycle(LifecycleEnum.Singletone)));\n\t\t\t\t\tbreak;\n\t\t\t\tcase LifecycleEnum.Demanded:\n\t\t\t\t\tthis.scopes.set(lifecycle.id, new DemandedFactory(this, this.filterClassesByLifecycle(LifecycleEnum.Demanded)));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\t}\n\n\t_initScopes() {\n\t\tthis.scopes.forEach((scope) => {\n\t\t\tif (scope.init) {\n\t\t\t\tscope.init();\n\t\t\t}\n\t\t});\n\t}\n\n\thasDIObject(name) {\n\t\tconst classTree = this._findClassTree(name);\n\t\treturn classTree !== undefined;\n\t}\n\n\thasInstance(name) {\n\t\tconst classTree = this._findClassTree(name);\n\t\tif (classTree === undefined) return false;\n\t\tconst scope = this.getScope(classTree.baseNode.lifecycle.id);\n\t\tif (classTree.baseNode.lifecycle.id === LifecycleEnum.Demanded) return false;\n\t\treturn scope.hasInstance(classTree.baseNode.key);\n\t}\n\n\tgetInstance(name, lifecycleId, calledFromScope) {\n\t\tconst clazz = this._findClassTree(name, lifecycleId);\n\t\tif (clazz === undefined) {\n\t\t\tif (calledFromScope) return undefined;\n\t\t\treturn this._getChildInstance(name, lifecycleId);\n\t\t}\n\t\tconst key = clazz.baseNode.key;\n\t\tconst scope = this.getScope(clazz.baseNode.lifecycle.id);\n\t\tif (!scope) {\n\t\t\tif (calledFromScope) return undefined;\n\t\t\treturn this._getChildInstance(name, lifecycleId);\n\t\t}\n\t\tif (scope instanceof DemandedFactory) return scope.createInstance(key);\n\t\treturn calledFromScope ? scope.getInstance(key) : scope.getInstance(key) ?? this._getChildInstance(name, lifecycleId);\n\t}\n\n\ttypeMatch(name, type) {\n\t\t// is DI object with name instance of type\n\t\tconst clazz = this._findClassTree(name);\n\t\tif (clazz === undefined) {\n\t\t\tthrow new Error(\"There is no di object with this name.\");\n\t\t}\n\t\treturn clazz.baseNode.type === type;\n\t}\n\n\tgetScope(lifecycleId) {\n\t\tif (typeof lifecycleId !== \"number\" || !Object.values(LifecycleEnum).find((v) => v === lifecycleId)) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this.scopes.get(lifecycleId);\n\t}\n}\n\nexport default ContextContainer;\n","\nimport DIClazzModule from \"./DIClazz.js\";\nimport {\n\tDIObjectConfig as DIObjectConfigModule,\n\tDemandedConfig as DemandedConfigModule,\n\tSessionConfig as SessionConfigModule,\n\tSingletoneConfig as SingletoneConfigModule,\n} from \"./DIObjectConfig.js\";\nimport DIObjectKeyModule from \"./containers/helpers/DIObjectKey.js\";\nimport ContextContainerModule from \"./containers/ContextContainer.js\";\nimport AbstractContextContainerModule from \"./containers/AbstractContextContainer.js\";\nimport DemandedFactoryModule from \"./containers/DemandedFactory.js\";\nimport SessionContainerModule from \"./containers/SessionContainer.js\";\nimport SimpleContainerModule from \"./containers/SimpleContainer.js\";\nimport SingletoneContainerModule from \"./containers/SingletoneContainer.js\";\nimport DemandedLifecycleModule from \"./lifecycle/DemandedLifecycle.js\";\nimport LifecycleModule from \"./lifecycle/Lifecycle.js\";\nimport SessionLifecycleModule from \"./lifecycle/SessionLifecycle.js\";\nimport SingletoneLifecycleModule from \"./lifecycle/SingletoneLifecycle.js\";\n\n// const names = {\n//     windowName: Symbol.for('window'),\n//     sideBarName: Symbol.for('sideBar'),\n//     buttonName: 'button',\n//     rectangleName: 'rectangle',\n// };\n\n// const DIConfig = [\n//     // new DemandedConfig(\n//     //     'abstractWindow',\n//     //     AbstractWindow\n//     // ),\n//     new DemandedConfigModule(\n//         names.windowName,\n//         Window,\n//         function () {\n//             console.log(10);\n//         },\n//         function () {\n//             console.log(this.sideBar.button.width);\n//         }\n//     ),\n//     new SingletoneConfigModule(names.sideBarName, SideBar),\n//     new SessionConfigModule(names.buttonName, Button),\n// ];\n\n// const DISecondConfig = [\n//     new SessionConfigModule('dot', dot),\n//     new SessionConfigModule(names.rectangleName, rectangle),\n// ];\n\n// const appContext = new ContextContainerModule(DIConfig, 'app context');\n// const appSecondContext = new ContextContainerModule(DISecondConfig, 'app second context', appContext);\n\n// appContext.init();\n// appSecondContext.init();\n// appContext.getInstance(names.windowName);\n// console.log(appContext.getInstance(names.rectangleName));\n// console.log(appContext.getChildren());\n// const w = appContext.getInstance(Window);\n// console.log(appContext.typeMatch(names.windowName, Window));\n// const aw = appContext.getInstance(AbstractWindow);\n\n// const DIConfig = [\n//     new DIObjectConfig('animal', Animal, LifecycleEnum.Demanded),\n//     new DIObjectConfig('woman', Woman),\n//     new DIObjectConfig('man', Man),\n//     new DIObjectConfig('simple', Simple, LifecycleEnum.Singletone),\n//     new DIObjectConfig('dot', dot),\n//     new DIObjectConfig('line', line),\n//     new DIObjectConfig('square', square),\n//     new DIObjectConfig('rectangle', rectangle),\n// ];\n\n// const appContext = new ContextContainer(DIConfig, 'App Context');\n// appContext.init();\n\n// const simpleObj = appContext.getInstance(Simple);\n// const manObg = appContext.getInstance(Man);\n\n// appContext.getInstance(Simple);\n\n// console.log('This is Simple singletone from AppContext ', simpleObj);\n// console.log('This is Man session from AppContext ', manObg);\n\n// const testPromise = new Promise((resolve, reject) => {\n//     setTimeout(() => resolve(5), 1000);\n// });\n\n// testPromise.then((res) => {\n//     console.log(res);\n//     return res + 5;\n// });\n\n// testPromise.then((res) => {\n//     console.log(res);\n//     return res + 10;\n// })\n\nconst Dizy = {\n\tContextContainer: ContextContainerModule,\n\tAbstractContextContainer: AbstractContextContainerModule,\n\tDemandedFactory: DemandedFactoryModule,\n\tSimpleContainer: SimpleContainerModule,\n\tSessionContainer: SessionContainerModule,\n\tSingletoneContainer: SingletoneContainerModule,\n\tDIObjectKey: DIObjectKeyModule,\n\tDemandedConfig: DemandedConfigModule,\n\tSessionConfig: SessionConfigModule,\n\tSingletoneConfig: SingletoneConfigModule,\n\tDIObjectConfig: DIObjectConfigModule,\n\tDIClazz: DIClazzModule,\n\tDemandedLifecycle: DemandedLifecycleModule,\n\tSingletoneLifecycle: SingletoneLifecycleModule,\n\tSessionLifecycle: SessionLifecycleModule,\n\tLifecycle: LifecycleModule,\n};\n\nmodule.exports.ContextContainer = Dizy.ContextContainer;\nmodule.exports.AbstractContextContainer = Dizy.AbstractContextContainer;\nmodule.exports.DemandedConfig = Dizy.DemandedConfig;\nmodule.exports.SessionConfig = Dizy.SessionConfig;\nmodule.exports.SingletoneConfig = Dizy.SingletoneConfig;\nmodule.exports.DIObjectConfig = Dizy.DIObjectConfig;\nmodule.exports.DIClazz = Dizy.DIClazz;\nmodule.exports.DIObjectKey = Dizy.DIObjectKey;\nmodule.exports.SingletoneContainer = Dizy.SingletoneContainer;\nmodule.exports.SimpleContainer = Dizy.SimpleContainer;\nmodule.exports.DemandedFactory = Dizy.DemandedFactory;\nmodule.exports.SessionContainer = Dizy.SessionContainer;\nmodule.exports.DemandedLifecycle = Dizy.DemandedLifecycle;\nmodule.exports.SingletoneLifecycle = Dizy.SingletoneLifecycle;\nmodule.exports.SessionLifecycle = Dizy.SessionLifecycle;\nmodule.exports.Lifecycle = Dizy.Lifecycle;\n\nmodule.exports = Dizy;\n"],"names":["root","factory","exports","module","define","amd","self","argDefaultValue","getBaseClassConstructor","classConstructorArgsNames","functionArgsNames","getType","getStringifiedEntityName","parseType","ArgumentInvalidType","Error","constructor","argType","super","ArgumentIsEmptyString","argStr","parts","split","name","trim","value","length","undefined","ClassInvalidType","cls","clsType","prototype","__proto__","findCloseBraceIndex","splitArgsStrByCommas","HasNoConstructorError","ClsArgumentInvalidType","clsStr","toString","startIndex","indexOf","openBraceStartIndex","closeBraceStartIndex","argsStr","slice","startPosition","args","map","arg","filter","FuncArgumentInvalidType","funcType","str","openBraceIndex","closeBraceIndex","getOpenBracesCount","end","s","index","char","openBraceBeforeCloseCount","i","findArgsSeparatorCommas","allCommas","prevCommaIndex","comma","openBracesCount","closeBracesCount","openCurlyBracesCount","closeCurlyBracesCount","c","separators","commaIndex","func","funcStr","equalIndex","EntityStrInvalidType","entityStr","entityStrType","EntityStrIsEmpty","includes","endIndex","data","type","typeStr","startsWith","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","r","Symbol","toStringTag","Object","defineProperty","NotImplementedException","this","message","id","beforeCreate","afterCreate","key","isClass","lifecycle","Persistent","Session","Singletone","Demanded","InvalidDIObjectName","InvalidDIObjectParent","UnregisteredDIObjectLifecycle","InvalidDIObjectLifecycle","InvalidDIObjectType","DIObjectConfig","InvalidKey","test","parseKey","keyFields","parent","Number","Boolean","DependencyLoopError","first","second","InvalidDIObjectArgDefaultValue","argName","defaultValue","InvalidDIObjectArgumentName","NotAllowedDIObjectType","DependencyTreeNode","baseClazz","height","deps","Array","isArray","find","d","BaseNodeInvalid","baseNode","node","forEach","dep","push","getDepsByHeight","groupByHeight","currentHeight","groups","currentDeps","InvalidDIParent","DIContainerClassTreeListInvalid","DIContainer","classTreeList","clsTree","hasInstance","getInstance","filterInstances","getParent","typeMatch","NotUniqueDIObjectKey","keys","Set","createKey","keyDescription","keyDescriptionStr","keyExisted","objectKey","add","values","v","InvalidBaseClazz","InvalidAllClasses","DependencyTreeFactory","createDependencyTree","allClasses","findIndex","argClazz","nextNode","DerivedClassConstructorArgsError","derivedClassName","baseClassName","InvalidContextConfig","InvalidContextParent","InvalidDIObjectKeyFactory","InvalidContextChild","AbstractContextContainer","config","keyFactory","getChildren","has","_addChild","Map","scopes","init","sort","a","b","_createScopes","_initScopes","child","containerObject","console","log","objName","keyFor","typeOfContainerObject","constructorArgs","obj","clazz","lifecycleId","_findClassTree","findCallback","_removeParent","_getChildInstance","instance","context","childContext","set","deleteChild","childName","get","delete","getScope","filterClassesByLifecycle","argsSet","place","elem","baseClass","isAnotherDIObject","objConfig","clsConstructorArgs","baseClsConstructorArgs","depsList","ContainerHasClassWithInvalidLifecycle","containerScope","call","createInstance","clazzTreeNode","argumentValues","InvalidSimpleContainerParent","_buildInstance","clazzTree","existedInstance","addInstance","deepEqual","x","y","prop","hasOwnProperty","InstancesMap","getBySymbol","symbolKey","hasBySymbol","isExist","classWithInvalidLifecycle","bind","existed","InvalidDemandedFactoryParent","DemandedFactoryClassTreeListInvalid","charAt","Math","floor","random","NotUniqueContextContainerName","InvalidContextContainerNameType","ContextContainer","static","scope","hasDIObject","classTree","calledFromScope","Dizy","DemandedFactory","SimpleContainer","SessionContainer","SingletoneContainer","DIObjectKey","DemandedConfig","SessionConfig","SingletoneConfig","DIClazz","DemandedLifecycle","SingletoneLifecycle","SessionLifecycle","Lifecycle"],"sourceRoot":""}