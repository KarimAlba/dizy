function cov_6zy0y68hk(){var path="D:\\Programming\\xyz\\dizy\\src\\test\\AbstractContextContainer.test.js";var hash="085d98129f75d63de567910077594c72e5e18cc1";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"D:\\Programming\\xyz\\dizy\\src\\test\\AbstractContextContainer.test.js",statementMap:{"0":{start:{line:11,column:0},end:{line:213,column:3}},"1":{start:{line:12,column:17},end:{line:12,column:54}},"2":{start:{line:13,column:1},end:{line:86,column:4}},"3":{start:{line:14,column:2},end:{line:24,column:5}},"4":{start:{line:15,column:3},end:{line:23,column:6}},"5":{start:{line:16,column:34},end:{line:16,column:86}},"6":{start:{line:16,column:40},end:{line:16,column:86}},"7":{start:{line:17,column:4},end:{line:17,column:54}},"8":{start:{line:18,column:20},end:{line:18,column:43}},"9":{start:{line:19,column:4},end:{line:19,column:50}},"10":{start:{line:20,column:4},end:{line:20,column:41}},"11":{start:{line:21,column:4},end:{line:21,column:44}},"12":{start:{line:22,column:4},end:{line:22,column:48}},"13":{start:{line:26,column:2},end:{line:31,column:5}},"14":{start:{line:27,column:3},end:{line:30,column:6}},"15":{start:{line:28,column:34},end:{line:28,column:97}},"16":{start:{line:28,column:40},end:{line:28,column:97}},"17":{start:{line:29,column:4},end:{line:29,column:127}},"18":{start:{line:33,column:2},end:{line:51,column:5}},"19":{start:{line:34,column:3},end:{line:50,column:6}},"20":{start:{line:37,column:34},end:{line:43,column:7}},"21":{start:{line:38,column:5},end:{line:43,column:7}},"22":{start:{line:44,column:4},end:{line:49,column:6}},"23":{start:{line:53,column:2},end:{line:69,column:5}},"24":{start:{line:54,column:3},end:{line:68,column:6}},"25":{start:{line:57,column:34},end:{line:62,column:7}},"26":{start:{line:58,column:5},end:{line:62,column:7}},"27":{start:{line:60,column:7},end:{line:60,column:22}},"28":{start:{line:63,column:4},end:{line:67,column:6}},"29":{start:{line:71,column:2},end:{line:85,column:5}},"30":{start:{line:72,column:3},end:{line:84,column:6}},"31":{start:{line:73,column:24},end:{line:73,column:62}},"32":{start:{line:75,column:34},end:{line:77,column:5}},"33":{start:{line:76,column:5},end:{line:76,column:109}},"34":{start:{line:78,column:4},end:{line:78,column:54}},"35":{start:{line:79,column:4},end:{line:79,column:51}},"36":{start:{line:80,column:4},end:{line:80,column:46}},"37":{start:{line:81,column:4},end:{line:81,column:79}},"38":{start:{line:82,column:4},end:{line:82,column:48}},"39":{start:{line:83,column:4},end:{line:83,column:48}},"40":{start:{line:88,column:1},end:{line:172,column:4}},"41":{start:{line:90,column:2},end:{line:125,column:5}},"42":{start:{line:91,column:3},end:{line:124,column:6}},"43":{start:{line:92,column:20},end:{line:92,column:104}},"44":{start:{line:93,column:4},end:{line:93,column:19}},"45":{start:{line:94,column:21},end:{line:101,column:5}},"46":{start:{line:102,column:4},end:{line:123,column:7}},"47":{start:{line:103,column:5},end:{line:122,column:8}},"48":{start:{line:104,column:6},end:{line:121,column:7}},"49":{start:{line:105,column:7},end:{line:105,column:94}},"50":{start:{line:106,column:13},end:{line:121,column:7}},"51":{start:{line:107,column:7},end:{line:107,column:98}},"52":{start:{line:108,column:13},end:{line:121,column:7}},"53":{start:{line:109,column:7},end:{line:118,column:9}},"54":{start:{line:110,column:69},end:{line:113,column:9}},"55":{start:{line:114,column:45},end:{line:117,column:9}},"56":{start:{line:120,column:7},end:{line:120,column:88}},"57":{start:{line:127,column:2},end:{line:151,column:5}},"58":{start:{line:128,column:3},end:{line:150,column:5}},"59":{start:{line:134,column:7},end:{line:134,column:30}},"60":{start:{line:141,column:22},end:{line:141,column:88}},"61":{start:{line:142,column:21},end:{line:142,column:73}},"62":{start:{line:143,column:18},end:{line:143,column:38}},"63":{start:{line:143,column:24},end:{line:143,column:38}},"64":{start:{line:144,column:5},end:{line:148,column:7}},"65":{start:{line:153,column:2},end:{line:171,column:5}},"66":{start:{line:154,column:3},end:{line:170,column:6}},"67":{start:{line:157,column:6},end:{line:157,column:17}},"68":{start:{line:162,column:6},end:{line:162,column:17}},"69":{start:{line:166,column:21},end:{line:166,column:81}},"70":{start:{line:167,column:20},end:{line:167,column:72}},"71":{start:{line:168,column:17},end:{line:168,column:37}},"72":{start:{line:168,column:23},end:{line:168,column:37}},"73":{start:{line:169,column:4},end:{line:169,column:66}},"74":{start:{line:174,column:1},end:{line:212,column:4}},"75":{start:{line:176,column:2},end:{line:211,column:5}},"76":{start:{line:177,column:3},end:{line:210,column:6}},"77":{start:{line:178,column:20},end:{line:178,column:104}},"78":{start:{line:179,column:4},end:{line:179,column:19}},"79":{start:{line:180,column:25},end:{line:187,column:5}},"80":{start:{line:188,column:4},end:{line:209,column:7}},"81":{start:{line:189,column:5},end:{line:208,column:8}},"82":{start:{line:190,column:6},end:{line:207,column:7}},"83":{start:{line:191,column:7},end:{line:191,column:94}},"84":{start:{line:192,column:13},end:{line:207,column:7}},"85":{start:{line:193,column:7},end:{line:193,column:98}},"86":{start:{line:194,column:13},end:{line:207,column:7}},"87":{start:{line:195,column:7},end:{line:204,column:9}},"88":{start:{line:196,column:83},end:{line:199,column:9}},"89":{start:{line:200,column:45},end:{line:203,column:9}},"90":{start:{line:206,column:7},end:{line:206,column:88}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:11,column:37},end:{line:11,column:38}},loc:{start:{line:11,column:43},end:{line:213,column:1}},line:11},"1":{name:"(anonymous_1)",decl:{start:{line:13,column:44},end:{line:13,column:45}},loc:{start:{line:13,column:50},end:{line:86,column:2}},line:13},"2":{name:"(anonymous_2)",decl:{start:{line:14,column:64},end:{line:14,column:65}},loc:{start:{line:14,column:70},end:{line:24,column:3}},line:14},"3":{name:"(anonymous_3)",decl:{start:{line:15,column:93},end:{line:15,column:94}},loc:{start:{line:15,column:99},end:{line:23,column:4}},line:15},"4":{name:"(anonymous_4)",decl:{start:{line:16,column:34},end:{line:16,column:35}},loc:{start:{line:16,column:40},end:{line:16,column:86}},line:16},"5":{name:"(anonymous_5)",decl:{start:{line:26,column:66},end:{line:26,column:67}},loc:{start:{line:26,column:72},end:{line:31,column:3}},line:26},"6":{name:"(anonymous_6)",decl:{start:{line:27,column:109},end:{line:27,column:110}},loc:{start:{line:27,column:115},end:{line:30,column:4}},line:27},"7":{name:"(anonymous_7)",decl:{start:{line:28,column:34},end:{line:28,column:35}},loc:{start:{line:28,column:40},end:{line:28,column:97}},line:28},"8":{name:"(anonymous_8)",decl:{start:{line:33,column:66},end:{line:33,column:67}},loc:{start:{line:33,column:72},end:{line:51,column:3}},line:33},"9":{name:"(anonymous_9)",decl:{start:{line:36,column:7},end:{line:36,column:8}},loc:{start:{line:36,column:13},end:{line:50,column:4}},line:36},"10":{name:"(anonymous_10)",decl:{start:{line:37,column:34},end:{line:37,column:35}},loc:{start:{line:38,column:5},end:{line:43,column:7}},line:38},"11":{name:"(anonymous_11)",decl:{start:{line:53,column:70},end:{line:53,column:71}},loc:{start:{line:53,column:76},end:{line:69,column:3}},line:53},"12":{name:"(anonymous_12)",decl:{start:{line:56,column:7},end:{line:56,column:8}},loc:{start:{line:56,column:13},end:{line:68,column:4}},line:56},"13":{name:"(anonymous_13)",decl:{start:{line:57,column:34},end:{line:57,column:35}},loc:{start:{line:58,column:5},end:{line:62,column:7}},line:58},"14":{name:"(anonymous_14)",decl:{start:{line:59,column:6},end:{line:59,column:7}},loc:{start:{line:59,column:18},end:{line:61,column:7}},line:59},"15":{name:"(anonymous_15)",decl:{start:{line:71,column:74},end:{line:71,column:75}},loc:{start:{line:71,column:80},end:{line:85,column:3}},line:71},"16":{name:"(anonymous_16)",decl:{start:{line:72,column:97},end:{line:72,column:98}},loc:{start:{line:72,column:103},end:{line:84,column:4}},line:72},"17":{name:"(anonymous_17)",decl:{start:{line:75,column:34},end:{line:75,column:35}},loc:{start:{line:75,column:40},end:{line:77,column:5}},line:75},"18":{name:"(anonymous_18)",decl:{start:{line:88,column:45},end:{line:88,column:46}},loc:{start:{line:88,column:51},end:{line:172,column:2}},line:88},"19":{name:"(anonymous_19)",decl:{start:{line:90,column:75},end:{line:90,column:76}},loc:{start:{line:90,column:81},end:{line:125,column:3}},line:90},"20":{name:"(anonymous_20)",decl:{start:{line:91,column:79},end:{line:91,column:80}},loc:{start:{line:91,column:85},end:{line:124,column:4}},line:91},"21":{name:"(anonymous_21)",decl:{start:{line:102,column:21},end:{line:102,column:22}},loc:{start:{line:102,column:38},end:{line:123,column:5}},line:102},"22":{name:"(anonymous_22)",decl:{start:{line:103,column:40},end:{line:103,column:41}},loc:{start:{line:103,column:49},end:{line:122,column:6}},line:103},"23":{name:"(anonymous_23)",decl:{start:{line:110,column:55},end:{line:110,column:56}},loc:{start:{line:110,column:69},end:{line:113,column:9}},line:110},"24":{name:"(anonymous_24)",decl:{start:{line:114,column:31},end:{line:114,column:32}},loc:{start:{line:114,column:45},end:{line:117,column:9}},line:114},"25":{name:"(anonymous_25)",decl:{start:{line:127,column:116},end:{line:127,column:117}},loc:{start:{line:127,column:122},end:{line:151,column:3}},line:127},"26":{name:"(anonymous_26)",decl:{start:{line:131,column:4},end:{line:131,column:5}},loc:{start:{line:131,column:10},end:{line:149,column:5}},line:131},"27":{name:"(anonymous_27)",decl:{start:{line:133,column:6},end:{line:133,column:7}},loc:{start:{line:133,column:27},end:{line:135,column:7}},line:133},"28":{name:"(anonymous_28)",decl:{start:{line:138,column:6},end:{line:138,column:7}},loc:{start:{line:138,column:20},end:{line:138,column:22}},line:138},"29":{name:"(anonymous_29)",decl:{start:{line:143,column:18},end:{line:143,column:19}},loc:{start:{line:143,column:24},end:{line:143,column:38}},line:143},"30":{name:"(anonymous_30)",decl:{start:{line:153,column:85},end:{line:153,column:86}},loc:{start:{line:153,column:91},end:{line:171,column:3}},line:153},"31":{name:"(anonymous_31)",decl:{start:{line:154,column:100},end:{line:154,column:101}},loc:{start:{line:154,column:106},end:{line:170,column:4}},line:154},"32":{name:"(anonymous_32)",decl:{start:{line:156,column:5},end:{line:156,column:6}},loc:{start:{line:156,column:20},end:{line:158,column:6}},line:156},"33":{name:"(anonymous_33)",decl:{start:{line:161,column:5},end:{line:161,column:6}},loc:{start:{line:161,column:20},end:{line:163,column:6}},line:161},"34":{name:"(anonymous_34)",decl:{start:{line:168,column:17},end:{line:168,column:18}},loc:{start:{line:168,column:23},end:{line:168,column:37}},line:168},"35":{name:"(anonymous_35)",decl:{start:{line:174,column:55},end:{line:174,column:56}},loc:{start:{line:174,column:61},end:{line:212,column:2}},line:174},"36":{name:"(anonymous_36)",decl:{start:{line:176,column:79},end:{line:176,column:80}},loc:{start:{line:176,column:85},end:{line:211,column:3}},line:176},"37":{name:"(anonymous_37)",decl:{start:{line:177,column:51},end:{line:177,column:52}},loc:{start:{line:177,column:57},end:{line:210,column:4}},line:177},"38":{name:"(anonymous_38)",decl:{start:{line:188,column:25},end:{line:188,column:26}},loc:{start:{line:188,column:42},end:{line:209,column:5}},line:188},"39":{name:"(anonymous_39)",decl:{start:{line:189,column:40},end:{line:189,column:41}},loc:{start:{line:189,column:49},end:{line:208,column:6}},line:189},"40":{name:"(anonymous_40)",decl:{start:{line:196,column:69},end:{line:196,column:70}},loc:{start:{line:196,column:83},end:{line:199,column:9}},line:196},"41":{name:"(anonymous_41)",decl:{start:{line:200,column:31},end:{line:200,column:32}},loc:{start:{line:200,column:45},end:{line:203,column:9}},line:200}},branchMap:{"0":{loc:{start:{line:104,column:6},end:{line:121,column:7}},type:"if",locations:[{start:{line:104,column:6},end:{line:121,column:7}},{start:{line:106,column:13},end:{line:121,column:7}}],line:104},"1":{loc:{start:{line:106,column:13},end:{line:121,column:7}},type:"if",locations:[{start:{line:106,column:13},end:{line:121,column:7}},{start:{line:108,column:13},end:{line:121,column:7}}],line:106},"2":{loc:{start:{line:108,column:13},end:{line:121,column:7}},type:"if",locations:[{start:{line:108,column:13},end:{line:121,column:7}},{start:{line:119,column:13},end:{line:121,column:7}}],line:108},"3":{loc:{start:{line:190,column:6},end:{line:207,column:7}},type:"if",locations:[{start:{line:190,column:6},end:{line:207,column:7}},{start:{line:192,column:13},end:{line:207,column:7}}],line:190},"4":{loc:{start:{line:192,column:13},end:{line:207,column:7}},type:"if",locations:[{start:{line:192,column:13},end:{line:207,column:7}},{start:{line:194,column:13},end:{line:207,column:7}}],line:192},"5":{loc:{start:{line:194,column:13},end:{line:207,column:7}},type:"if",locations:[{start:{line:194,column:13},end:{line:207,column:7}},{start:{line:205,column:13},end:{line:207,column:7}}],line:194}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"085d98129f75d63de567910077594c72e5e18cc1"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_6zy0y68hk=function(){return actualCoverage;};}return actualCoverage;}cov_6zy0y68hk();import{assert}from"chai";// eslint-disable-next-line no-unused-vars
import ContextContainer from"../containers/ContextContainer.js";// without this import mocha throws an error
// eslint-disable-next-line no-unused-vars
import AbstractContextContainer from"../containers/AbstractContextContainer.js";import{SingletoneConfig}from"../DIObjectConfig.js";import DependencyTree from"../containers/helpers/DependencyTree.js";import AbstractContextContainerFixture from"./fixtures/AbstractContextContainerFixture.js";import AbstractContextContainerFactory from"../containers/AbstractContextContainerFactory.js";cov_6zy0y68hk().s[0]++;describe("AbstractContextContainer",()=>{cov_6zy0y68hk().f[0]++;const factory=(cov_6zy0y68hk().s[1]++,new AbstractContextContainerFactory());cov_6zy0y68hk().s[2]++;describe("new AbstractContextContainer()",()=>{cov_6zy0y68hk().f[1]++;cov_6zy0y68hk().s[3]++;describe("create AbstractContextContainer without arguments",()=>{cov_6zy0y68hk().f[2]++;cov_6zy0y68hk().s[4]++;it(`should create an instance of AbstractContextContainer with arguments default values`,()=>{cov_6zy0y68hk().f[3]++;cov_6zy0y68hk().s[5]++;const createAbstractContext=()=>{cov_6zy0y68hk().f[4]++;cov_6zy0y68hk().s[6]++;return factory.createContainer([],"abstractContext");};cov_6zy0y68hk().s[7]++;assert.doesNotThrow(createAbstractContext,Error);const context=(cov_6zy0y68hk().s[8]++,createAbstractContext());cov_6zy0y68hk().s[9]++;assert.equal(context.name,"abstractContext");cov_6zy0y68hk().s[10]++;assert.deepEqual(context.config,[]);cov_6zy0y68hk().s[11]++;assert.equal(context.getParent(),null);cov_6zy0y68hk().s[12]++;assert.deepEqual(context.classTreeList,[]);});});cov_6zy0y68hk().s[13]++;describe("create AbstractContextContainer with invalid config",()=>{cov_6zy0y68hk().f[5]++;cov_6zy0y68hk().s[14]++;it(`should throw an error 'Invalid context config. Config must be an array of DIObjectConfig instances'`,()=>{cov_6zy0y68hk().f[6]++;cov_6zy0y68hk().s[15]++;const createAbstractContext=()=>{cov_6zy0y68hk().f[7]++;cov_6zy0y68hk().s[16]++;return factory.createContainer({notDIObjectConfigArray:true});};cov_6zy0y68hk().s[17]++;assert.throws(createAbstractContext,Error,"Invalid context config. Config must be an array of DIObjectConfig instances");});});cov_6zy0y68hk().s[18]++;describe("create AbstractContextContainer with invalid parent",()=>{cov_6zy0y68hk().f[8]++;cov_6zy0y68hk().s[19]++;it(`should throw an error
				'Invalid context parent. Parent must be an instance of AbstractContextContainer or it's derived class, null or undefined.'
				`,()=>{cov_6zy0y68hk().f[9]++;cov_6zy0y68hk().s[20]++;const createAbstractContext=()=>{cov_6zy0y68hk().f[10]++;cov_6zy0y68hk().s[21]++;return factory.createContainer([],"abstractContext",{parent:{},name:"",config:[],classTreeList:[]});};cov_6zy0y68hk().s[22]++;assert.throws(createAbstractContext,Error,"Invalid context parent. "+"Parent must be an instance of AbstractContextContainer or it's derived class, null or undefined.");});});cov_6zy0y68hk().s[23]++;describe("create AbstractContextContainer with invalid keyFactory",()=>{cov_6zy0y68hk().f[11]++;cov_6zy0y68hk().s[24]++;it(`should throw an error
				'Invalid context keyFactory. KeyFactory must be an instance of DIObjectKeyFactory or it's derived class'
				`,()=>{cov_6zy0y68hk().f[12]++;cov_6zy0y68hk().s[25]++;const createAbstractContext=()=>{cov_6zy0y68hk().f[13]++;cov_6zy0y68hk().s[26]++;return factory.createContainer([],"abstractContext",null,{createKey(){cov_6zy0y68hk().f[14]++;cov_6zy0y68hk().s[27]++;return`@name`;}});};cov_6zy0y68hk().s[28]++;assert.throws(createAbstractContext,Error,"Invalid context keyFactory. KeyFactory must be an instance of DIObjectKeyFactory or it's derived class");});});cov_6zy0y68hk().s[29]++;describe("create AbstractContextContainer with valid arguments values",()=>{cov_6zy0y68hk().f[15]++;cov_6zy0y68hk().s[30]++;it(`should create an instance of AbstractContextContainer and set it's properties correctly`,()=>{cov_6zy0y68hk().f[16]++;const baseContext=(cov_6zy0y68hk().s[31]++,factory.createContainer([],"context"));let context;cov_6zy0y68hk().s[32]++;const createAbstractContext=()=>{cov_6zy0y68hk().f[17]++;cov_6zy0y68hk().s[33]++;context=factory.createContainer(AbstractContextContainerFixture.diConfig,"correctName",baseContext);};cov_6zy0y68hk().s[34]++;assert.doesNotThrow(createAbstractContext,Error);cov_6zy0y68hk().s[35]++;assert.equal(context.getParent(),baseContext);cov_6zy0y68hk().s[36]++;assert.equal(context.name,"correctName");cov_6zy0y68hk().s[37]++;assert.deepEqual(context.config,AbstractContextContainerFixture.diConfig);cov_6zy0y68hk().s[38]++;assert.deepEqual(context.classTreeList,[]);cov_6zy0y68hk().s[39]++;assert.deepEqual(context.scopes,new Map());});});});cov_6zy0y68hk().s[40]++;describe("AbstractContextContainer.init()",()=>{cov_6zy0y68hk().f[18]++;cov_6zy0y68hk().s[41]++;// test for old version of #validateDIConfig, now it's test in 23 line
describe("AbstractContextContainer.init() with absolutely valid config",()=>{cov_6zy0y68hk().f[19]++;cov_6zy0y68hk().s[42]++;it("should set classTreeList correctly (list of DependencyTree instances)",()=>{cov_6zy0y68hk().f[20]++;const context=(cov_6zy0y68hk().s[43]++,factory.createContainer(AbstractContextContainerFixture.diConfig,"abstractContext"));cov_6zy0y68hk().s[44]++;context.init();const expected=(cov_6zy0y68hk().s[45]++,[new DependencyTree(AbstractContextContainerFixture.derivedNode),new DependencyTree(AbstractContextContainerFixture.demandedBNode),new DependencyTree(AbstractContextContainerFixture.sessionBNode),new DependencyTree(AbstractContextContainerFixture.baseNode),new DependencyTree(AbstractContextContainerFixture.demandedANode),new DependencyTree(AbstractContextContainerFixture.sessionANode)]);cov_6zy0y68hk().s[46]++;expected.forEach((tree,index)=>{cov_6zy0y68hk().f[21]++;cov_6zy0y68hk().s[47]++;Object.keys(tree.baseNode).forEach(key=>{cov_6zy0y68hk().f[22]++;cov_6zy0y68hk().s[48]++;if(key==="lifecycle"){cov_6zy0y68hk().b[0][0]++;cov_6zy0y68hk().s[49]++;assert.deepEqual(context.classTreeList[index].baseNode[key].id,tree.baseNode[key].id);}else{cov_6zy0y68hk().b[0][1]++;cov_6zy0y68hk().s[50]++;if(key==="constructor"){cov_6zy0y68hk().b[1][0]++;cov_6zy0y68hk().s[51]++;assert.deepEqual(context.classTreeList[index].baseNode[key].args,tree.baseNode[key].args);}else{cov_6zy0y68hk().b[1][1]++;cov_6zy0y68hk().s[52]++;if(key==="deps"){cov_6zy0y68hk().b[2][0]++;cov_6zy0y68hk().s[53]++;assert.deepEqual(context.classTreeList[index].baseNode[key].map(clsTree=>{cov_6zy0y68hk().f[23]++;cov_6zy0y68hk().s[54]++;return{...clsTree,lifecycle:clsTree.lifecycle.id};}),tree.baseNode[key].map(clsTree=>{cov_6zy0y68hk().f[24]++;cov_6zy0y68hk().s[55]++;return{...clsTree,lifecycle:clsTree.lifecycle.id};}));}else{cov_6zy0y68hk().b[2][1]++;cov_6zy0y68hk().s[56]++;assert.deepEqual(context.classTreeList[index].baseNode[key],tree.baseNode[key]);}}}});});});});cov_6zy0y68hk().s[57]++;describe("AbstractContextContainer.init() with config that has a di object with type with invalid argument name",()=>{cov_6zy0y68hk().f[25]++;cov_6zy0y68hk().s[58]++;it("should throw an error "+"'Invalid argument name { ${argName} } in ${type}. There is no object with name { ${argName} } in DI Container.'",()=>{cov_6zy0y68hk().f[26]++;class A{constructor(nonameB){cov_6zy0y68hk().f[27]++;cov_6zy0y68hk().s[59]++;this.nonameB=nonameB;}}class B{constructor(){cov_6zy0y68hk().f[28]++;}}const diConfig=(cov_6zy0y68hk().s[60]++,[new SingletoneConfig("nonameA",A),new SingletoneConfig("b",B)]);const context=(cov_6zy0y68hk().s[61]++,factory.createContainer(diConfig,"abstractContext"));cov_6zy0y68hk().s[62]++;const init=()=>{cov_6zy0y68hk().f[29]++;cov_6zy0y68hk().s[63]++;return context.init();};cov_6zy0y68hk().s[64]++;assert.throws(init,Error,`Invalid argument name { nonameB } in nonameA. There is no object with name { nonameB } in DI Container.`);});});cov_6zy0y68hk().s[65]++;describe("AbstractContextContainer.init() with config that has loop dependencies",()=>{cov_6zy0y68hk().f[30]++;cov_6zy0y68hk().s[66]++;it("should throw an error "+"'${first} requires ${second}. And ${second} requires ${first}.'",()=>{cov_6zy0y68hk().f[31]++;class A{constructor(b){cov_6zy0y68hk().f[32]++;cov_6zy0y68hk().s[67]++;this.b=b;}}class B{constructor(a){cov_6zy0y68hk().f[33]++;cov_6zy0y68hk().s[68]++;this.a=a;}}const diConfig=(cov_6zy0y68hk().s[69]++,[new SingletoneConfig("a",A),new SingletoneConfig("b",B)]);const context=(cov_6zy0y68hk().s[70]++,factory.createContainer(diConfig,"abstractContext"));cov_6zy0y68hk().s[71]++;const init=()=>{cov_6zy0y68hk().f[34]++;cov_6zy0y68hk().s[72]++;return context.init();};cov_6zy0y68hk().s[73]++;assert.throws(init,Error,`a requires b. And b requires a.`);});});});cov_6zy0y68hk().s[74]++;describe("AbstractContextContainer._findClassTree()",()=>{cov_6zy0y68hk().f[35]++;cov_6zy0y68hk().s[75]++;// test for old version of #validateDIConfig, now it's test in 23 line
describe("AbstractContextContainer._findClassTree(name) with included name",()=>{cov_6zy0y68hk().f[36]++;cov_6zy0y68hk().s[76]++;it("should return classTree with correct name",()=>{cov_6zy0y68hk().f[37]++;const context=(cov_6zy0y68hk().s[77]++,factory.createContainer(AbstractContextContainerFixture.diConfig,"abstractContext"));cov_6zy0y68hk().s[78]++;context.init();const expectedList=(cov_6zy0y68hk().s[79]++,[new DependencyTree(AbstractContextContainerFixture.derivedNode),new DependencyTree(AbstractContextContainerFixture.demandedBNode),new DependencyTree(AbstractContextContainerFixture.sessionBNode),new DependencyTree(AbstractContextContainerFixture.baseNode),new DependencyTree(AbstractContextContainerFixture.demandedANode),new DependencyTree(AbstractContextContainerFixture.sessionANode)]);cov_6zy0y68hk().s[80]++;expectedList.forEach((tree,index)=>{cov_6zy0y68hk().f[38]++;cov_6zy0y68hk().s[81]++;Object.keys(tree.baseNode).forEach(key=>{cov_6zy0y68hk().f[39]++;cov_6zy0y68hk().s[82]++;if(key==="lifecycle"){cov_6zy0y68hk().b[3][0]++;cov_6zy0y68hk().s[83]++;assert.deepEqual(context.classTreeList[index].baseNode[key].id,tree.baseNode[key].id);}else{cov_6zy0y68hk().b[3][1]++;cov_6zy0y68hk().s[84]++;if(key==="constructor"){cov_6zy0y68hk().b[4][0]++;cov_6zy0y68hk().s[85]++;assert.deepEqual(context.classTreeList[index].baseNode[key].args,tree.baseNode[key].args);}else{cov_6zy0y68hk().b[4][1]++;cov_6zy0y68hk().s[86]++;if(key==="deps"){cov_6zy0y68hk().b[5][0]++;cov_6zy0y68hk().s[87]++;assert.deepEqual(context._findClassTree(tree.baseNode.name).baseNode[key].map(clsTree=>{cov_6zy0y68hk().f[40]++;cov_6zy0y68hk().s[88]++;return{...clsTree,lifecycle:clsTree.lifecycle.id};}),tree.baseNode[key].map(clsTree=>{cov_6zy0y68hk().f[41]++;cov_6zy0y68hk().s[89]++;return{...clsTree,lifecycle:clsTree.lifecycle.id};}));}else{cov_6zy0y68hk().b[5][1]++;cov_6zy0y68hk().s[90]++;assert.deepEqual(context.classTreeList[index].baseNode[key],tree.baseNode[key]);}}}});});});});});});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,